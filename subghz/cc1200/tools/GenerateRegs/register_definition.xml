<?xml version="1.0"?>
<!DOCTYPE registerdefinition PUBLIC "SYSTEM" "../registerdefinition.dtd">
<registerdefinition>
  <DeviceName>CC1200</DeviceName>
<!--IOCFG3-->
  <Register>
    <Name>IOCFG3</Name>
    <Address>0x00</Address>
    <Description>GPIO3 IO Pin Configuration</Description>
    <Bitfield>
      <Name>GPIO3_ATRAN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Standard digital pad</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Pad in analog mode (digital GPIO input and output disabled)</Brief>
      </Value>
      <Description><![CDATA[Analog transfer enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO3_INV</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Invert output disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Invert output enable</Brief>
      </Value>
      <Description><![CDATA[Invert output enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO3_CFG</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x06</Reset>
      <Description><![CDATA[Output selection. Default: PKT_SYNC_RXTX
]]></Description>
    </Bitfield>
    <RegReset>6</RegReset>
  </Register>
<!--IOCFG2-->
  <Register>
    <Name>IOCFG2</Name>
    <Address>0x01</Address>
    <Description>GPIO2 IO Pin Configuration</Description>
    <Bitfield>
      <Name>GPIO2_ATRAN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Analog transfer enable. Refer to IOCFG3
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO2_INV</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Invert output enable. Refer to IOCFG3
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO2_CFG</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x07</Reset>
      <Description><![CDATA[Output selection. Default: PKT_CRC_OK
]]></Description>
    </Bitfield>
    <RegReset>7</RegReset>
  </Register>
<!--IOCFG1-->
  <Register>
    <Name>IOCFG1</Name>
    <Address>0x02</Address>
    <Description>GPIO1 IO Pin Configuration</Description>
    <Bitfield>
      <Name>GPIO1_ATRAN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Analog transfer enable. Refer to IOCFG3
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO1_INV</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Invert output enable. Refer to IOCFG3
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO1_CFG</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x30</Reset>
      <Description><![CDATA[Output selection. Default: HIGHZ. Note that GPIO1 is shared with the SPI and act as SO when CSn is asserted (active low). The system must ensure pull up/down on this pin
]]></Description>
    </Bitfield>
    <RegReset>30</RegReset>
  </Register>
<!--IOCFG0-->
  <Register>
    <Name>IOCFG0</Name>
    <Address>0x03</Address>
    <Description>GPIO0 IO Pin Configuration</Description>
    <Bitfield>
      <Name>GPIO0_ATRAN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Analog transfer enable. Refer to IOCFG3
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO0_INV</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Invert output enable. Refer to IOCFG3
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO0_CFG</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x3C</Reset>
      <Description><![CDATA[Output selection. Default: EXT_OSC_EN
]]></Description>
    </Bitfield>
    <RegReset>3c</RegReset>
  </Register>
<!--SYNC3-->
  <Register>
    <Name>SYNC3</Name>
    <Address>0x04</Address>
    <Description>Sync Word Configuration [31:24]</Description>
    <Bitfield>
      <Name>SYNC31_24</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x93</Reset>
      <Description><![CDATA[Sync word [31:24]
]]></Description>
    </Bitfield>
    <RegReset>93</RegReset>
  </Register>
<!--SYNC2-->
  <Register>
    <Name>SYNC2</Name>
    <Address>0x05</Address>
    <Description>Sync Word Configuration [23:16]</Description>
    <Bitfield>
      <Name>SYNC23_16</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x0B</Reset>
      <Description><![CDATA[Sync word [23:16]
]]></Description>
    </Bitfield>
    <RegReset>b</RegReset>
  </Register>
<!--SYNC1-->
  <Register>
    <Name>SYNC1</Name>
    <Address>0x06</Address>
    <Description>Sync Word Configuration [15:8]</Description>
    <Bitfield>
      <Name>SYNC15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x51</Reset>
      <Description><![CDATA[Sync word [15:8]
]]></Description>
    </Bitfield>
    <RegReset>51</RegReset>
  </Register>
<!--SYNC0-->
  <Register>
    <Name>SYNC0</Name>
    <Address>0x07</Address>
    <Description>Sync Word Configuration [7:0]</Description>
    <Bitfield>
      <Name>SYNC7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0xDE</Reset>
      <Description><![CDATA[Sync Word [7:0]
]]></Description>
    </Bitfield>
    <RegReset>de</RegReset>
  </Register>
<!--SYNC_CFG1-->
  <Register>
    <Name>SYNC_CFG1</Name>
    <Address>0x08</Address>
    <Description>Sync Word Detection Configuration Reg. 1</Description>
    <Bitfield>
      <Name>SYNC_MODE</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x05</Reset>
      <Value>
        <Number>000</Number>
        <Brief>No sync word</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>11 bits [SYNC15_8[2:0]:SYNC7_0]</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>16 bits [SYNC15_8:SYNC7_0]</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>18 bits [SYNC23_16[1:0]:SYNC15_8:SYNC7_0]</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>24 bits [SYNC23_16:SYNC15_8:SYNC7_0]</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>32 bits [SYNC31_24:SYNC23_16:SYNC15_8:SYNC7_0]</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>16H bits [SYNC31_24:SYNC23_16]</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>16D bits (DualSync search). When this setting is used in TX mode [SYNC15_8:SYNC7_0] is transmitted</Brief>
      </Value>
      <Description><![CDATA[Sync word configuration. When SYNC_MODE = 000b, all samples (noise or data) received after RX mode is entered will either be put in the RX FIFO or output on a GPIO configured as SERIAL_RX. Note that when 4'ary modulation is used the sync word uses 2'ary modulation (the symbol rate is kept the same)
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SYNC_THR</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x0A</Reset>
      <Description><![CDATA[Soft decision sync word threshold. A sync word is accepted when the calculated sync word qualifier value (PQT_SYNC_ERR.SYNC_ERROR) is less than SYNC_THR/2). A low threshold value means a strict sync word qualifier (sync word must be of high quality to be accepted) while a high threshold value will accept sync word of a poorer quality (increased probability of detecting false sync words)
]]></Description>
    </Bitfield>
    <RegReset>aa</RegReset>
  </Register>
<!--SYNC_CFG0-->
  <Register>
    <Name>SYNC_CFG0</Name>
    <Address>0x09</Address>
    <Description>Sync Word Detection Configuration Reg. 0</Description>
    <Bitfield>
      <Name>SYNC_CFG0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>AUTO_CLEAR</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Auto clear disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Auto clear enabled</Brief>
      </Value>
      <Description><![CDATA[Auto clear enable. Auto clear of symbol rate offset estimate when TOC_CFG.TOC_LIMIT != 0 and MDMCFG1.CARRIER_SENSE_GATE = 1. The  symbol rate offset estimate will be cleared when CARRIER_SENSE is de-asserted. Auto clear of IQIC coefficient when IQIC.IQIC_EN = 1. The receiver image compensation coefficient is cleared when the image signal dissappears
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RX_CONFIG_LIMITATION</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Symbol Rate &lt;= RX Filter BW/2 = f_xosc/(Decimation Factor*CHAN_BW.BB_CIC_DECFACT*4)[Hz]</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Symbol Rate &lt;= RX Filter BW = f_xosc/(Decimation Factor*CHAN_BW.BB_CIC_DECFACT*2)[Hz]</Brief>
      </Value>
      <Description><![CDATA[Receiver configuration limitation. The decimation factor is given by CHAN_BW.ADC_CIC_DECFACT. When this bit is set, RX filter BW must be less than 1500 kHz.
When RX_CONFIG_LIMITATION = 1 the AGC_CFG1.AGC_WIN_SIZE should be incremented by 1 and the wait time between AGC gain adjustment programmed through AGC_CFG1.AGC_SETTLE_WAIT should be doubled.
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PQT_GATING_EN</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>PQT gating enable</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>PQT gating enabled. The demodulator will not start to look for a sync word before a preamble is detected (i.e. PQT_REACHED is asserted). The preamble detector must be enabled for this feature to work (PREAMBLE_CFG0.PQT_EN = 1)</Brief>
      </Value>
      <Description><![CDATA[PQT gating enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>EXT_SYNC_DETECT</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[External sync detect can be used in blind mode to make the receiver change modem parameters after a sync word has been detected by the MCU. GPIO2 needs to be configured as SYNC_DETECT (IOCFG2.GPIO2_CFG = HIGHZ (48)) and the MCU should set this input when a sync word is detected. This will make the receiver switch modem parameters from sync search settings to packet receive settings similar to what is done in FIFO mode/normal mode
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>STRICT_SYNC_CHECK</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Value>
        <Number>00</Number>
        <Brief>Strict sync word check level 1</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Strict sync word check level 2</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Strict sync word check level 3</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Strict sync word check disabled</Brief>
      </Value>
      <Description><![CDATA[Strict sync word bit check. This feature is useful in cases where the sync word has weak correlation properties (level 3 is the strictest sync check)
]]></Description>
    </Bitfield>
    <RegReset>3</RegReset>
  </Register>
<!--DEVIATION_M-->
  <Register>
    <Name>DEVIATION_M</Name>
    <Address>0x0A</Address>
    <Description>Frequency Deviation Configuration</Description>
    <Bitfield>
      <Name>DEV_M</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x06</Reset>
      <Description><![CDATA[Frequency deviation (mantissa part)<BR/>
DEV_E > 0 => f_dev = f_xosc*(256+DEV_M)*2^DEV_E/2^22 [Hz]<BR/>
DEV_E = 0 => f_dev = f_xosc*DEV_M/2^21 [Hz]
]]></Description>
    </Bitfield>
    <RegReset>6</RegReset>
  </Register>
<!--MODCFG_DEV_E-->
  <Register>
    <Name>MODCFG_DEV_E</Name>
    <Address>0x0B</Address>
    <Description>Modulation Format and Frequency Deviation Configuration</Description>
    <Bitfield>
      <Name>MODEM_MODE</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Modem mode configuration
<TABLE BORDER=1>
<TR>
<TD>00</TD>
<TD>Normal mode</TD>
</TR>
<TR>
<TD>01</TD>
<TD>DSSS repeat mode. <BR/>
Requires that SYNC_CFG0.SYNC_MODE = 001b or 010b<BR/>
TX mode: PKT_CFG2.PKT_FORMAT = 00b<BR/>
RX mode: PKT_CFG2.PKT_FORMAT = 01b,<BR/>
MDMCFG1.FIFO_EN = 0, <BR/>
MDMCFG0.TRANSPARENT_MODE_EN = 0<BR/> <BR/>
In RX mode, data is only available on GPIO by configuring IOCFGx.GPIOx_CFG = 18</TD>
</TR>
<TR>
<TD>10</TD>
<TD> DSSS PN mode. <BR/> Both FIFO mode and synchronous serial mode are supported (PKT_CFG2.PKT_FORMAT = 00b or 01b)</TD>
<TR>
<TD>11</TD>
<TD>Carrier sense mode. <BR/> This mode can be used to measure the channel power (sync search is disabled in this mode)
</TD>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>MOD_FORMAT</Name>
      <Start>5</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>000</Number>
        <Brief>2-FSK</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>2-GFSK</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>ASK/OOK</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>4-FSK</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>4-GFSK</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[Modulation format
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>DEV_E</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[Frequency deviation (exponent part). See DEVIATION_M
]]></Description>
    </Bitfield>
    <RegReset>3</RegReset>
  </Register>
<!--DCFILT_CFG-->
  <Register>
    <Name>DCFILT_CFG</Name>
    <Address>0x0C</Address>
    <Description>Digital DC Removal Configuration</Description>
    <Bitfield>
      <Name>DCFILT_CFG_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>DCFILT_FREEZE_COEFF</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>DC filter algorithm estimates and compensates for DC error</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Manual DC compensation through registers DCFILTOFFSET_I1, DCFILTOFFSET_I0, DCFILTOFFSET_Q1, and DCFILTOFFSET_Q0</Brief>
      </Value>
      <Description><![CDATA[DC filter override
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>DCFILT_BW_SETTLE</Name>
      <Start>5</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>000</Number>
        <Brief>8 samples</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>16 samples</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>32 samples</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>64 samples</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>128 samples</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>128 samples</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>128 samples</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>128 samples</Brief>
      </Value>
      <Description><![CDATA[Settling period of high pass DC filter after AGC adjustment<BR/>
Sample Rate = f_xosc/Decimation Factor [Hz]<BR/>
The decimation factor is 12, 24, or 48, depending on the CHAN_BW.ADC_CIC_DECFACT setting
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>DCFILT_BW</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x04</Reset>
      <Description><![CDATA[Cut-off frequency (f_Cut_Off ) of high pass DC filter<BR/>
DCFILT_BW = 0 - 011b:<BR/>
f_Cut_Off_DC_filter ~= f_xosc/(Decimation Factor*2^(DCFILT_BW+3)) [Hz]<BR/>
DCFILT_BW = 110b - 111b:<BR/>
f_Cut_Off_DC_filter ~= f_xosc/(Decimation Factor*2^(2*DCFILT_BW)) [Hz]<BR/>
The decimation factor is 12, 24, or48, depending on the CHAN_BW.ADC_CIC_DECFACT setting
]]></Description>
    </Bitfield>
    <RegReset>4c</RegReset>
  </Register>
<!--PREAMBLE_CFG1-->
  <Register>
    <Name>PREAMBLE_CFG1</Name>
    <Address>0x0D</Address>
    <Description>Preamble Length Configuration Reg. 1</Description>
    <Bitfield>
      <Name>PREAMBLE_CFG1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>NUM_PREAMBLE</Name>
      <Start>5</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x05</Reset>
      <Value>
        <Number>0000</Number>
        <Brief>No preamble</Brief>
      </Value>
      <Value>
        <Number>0001</Number>
        <Brief>0.5 byte</Brief>
      </Value>
      <Value>
        <Number>0010</Number>
        <Brief>1 byte</Brief>
      </Value>
      <Value>
        <Number>0011</Number>
        <Brief>1.5 bytes</Brief>
      </Value>
      <Value>
        <Number>0100</Number>
        <Brief>2 bytes</Brief>
      </Value>
      <Value>
        <Number>0101</Number>
        <Brief>3 bytes</Brief>
      </Value>
      <Value>
        <Number>0110</Number>
        <Brief>4 bytes</Brief>
      </Value>
      <Value>
        <Number>0111</Number>
        <Brief>5 bytes</Brief>
      </Value>
      <Value>
        <Number>1000</Number>
        <Brief>6 bytes</Brief>
      </Value>
      <Value>
        <Number>1001</Number>
        <Brief>7 bytes</Brief>
      </Value>
      <Value>
        <Number>1010</Number>
        <Brief>8 bytes</Brief>
      </Value>
      <Value>
        <Number>1011</Number>
        <Brief>12 bytes</Brief>
      </Value>
      <Value>
        <Number>1100</Number>
        <Brief>24 bytes</Brief>
      </Value>
      <Value>
        <Number>1101</Number>
        <Brief>30 bytes</Brief>
      </Value>
      <Value>
        <Number>1110</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Value>
        <Number>1111</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[Sets the minimum number of preamble bits to be transmitted
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PREAMBLE_WORD</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>10101010 (0xAA)</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>01010101 (0x55)</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>00110011 (0x33)</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>11001100 (0xCC)</Brief>
      </Value>
      <Description><![CDATA[Preamble byte configuration. PREAMBLE_WORD determines how a preamble byte looks like. Note that when 4'ary modulation is used the preamble uses 2'are modulation (the baud rate is kept the same)
]]></Description>
    </Bitfield>
    <RegReset>14</RegReset>
  </Register>
<!--PREAMBLE_CFG0-->
  <Register>
    <Name>PREAMBLE_CFG0</Name>
    <Address>0x0E</Address>
    <Description>Preamble Detection Configuration Reg. 0</Description>
    <Bitfield>
      <Name>PQT_EN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Preamble detection disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Preamble detection enabled</Brief>
      </Value>
      <Description><![CDATA[Preamble detection enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PQT_VALID_TIMEOUT</Name>
      <Start>6</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x05</Reset>
      <Value>
        <Number>000</Number>
        <Brief>11 symbols</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>12 symbols</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>13 symbols</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>14 symbols</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>15 symbols</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>17 symbols</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>24 symbols</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>32 symbols</Brief>
      </Value>
      <Description><![CDATA[PQT start-up timer. PQT_VALID_TIMEOUT sets the number of symbols that must be received before PQT_VALID is asserted
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PQT</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x0A</Reset>
      <Description><![CDATA[Soft Decision PQT. A preamble is detected when the calculated preamble qualifier value (PQT_SYNC_ERR.PQT_ERROR) is less than PQT. A low threshold value means a strict preamble qualifier (preamble must be of high quality to be accepted) while a high threshold value will accept preamble of a poorer quality (increased probability of detecting false preamble)
]]></Description>
    </Bitfield>
    <RegReset>da</RegReset>
  </Register>
<!--IQIC-->
  <Register>
    <Name>IQIC</Name>
    <Address>0x0F</Address>
    <Description>Digital Image Channel Compensation Configuration</Description>
    <Bitfield>
      <Name>IQIC_EN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>IQ image compensation disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>IQ image compensation enabled</Brief>
      </Value>
      <Description><![CDATA[IQ image compensation enable. When this bit is set the following must be true:<BR/>
f_IF > RX Filter BW<BR/>
(see IF_MIX_CFGCMIX_CFG for how to program f_IF)
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IQIC_UPDATE_COEFF_EN</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>IQIC update coefficients disabled (IQIE_I1, IQIE_I0, IQIE_Q1, IQIE_Q0 registers are not updated)</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>IQIC update coefficients enabled (IQIE_I1, IQIE_I0, IQIE_Q1, IQIE_Q0 registers are updated)</Brief>
      </Value>
      <Description><![CDATA[IQIC update coefficients enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IQIC_BLEN_SETTLE</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>8 samples</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>32 samples</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>128 samples</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>256 samples</Brief>
      </Value>
      <Description><![CDATA[IQIC block length when settling. The IQIC module will do a coarse estimation of IQ imbalance coefficients during settling mode. Long block length increases settling time and improves image rejection
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IQIC_BLEN</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>00</Number>
        <Brief>8 samples</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>32 samples</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>128 samples</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>256 samples</Brief>
      </Value>
      <Description><![CDATA[IQIC block length. Long block length increases settling time and improves image rejection
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IQIC_IMGCH_LEVEL_THR</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>&gt; 256</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>&gt; 512</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>&gt; 1024</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>&gt; 2048</Brief>
      </Value>
      <Description><![CDATA[IQIC image channel level threshold. Image rejection will be activated when image carrier is present. The IQIC image channel level threshold is an image carrier detector. High threshold imply that image carrier must be high to enable IQIC compensation module
]]></Description>
    </Bitfield>
    <RegReset>c4</RegReset>
  </Register>
<!--CHAN_BW-->
  <Register>
    <Name>CHAN_BW</Name>
    <Address>0x10</Address>
    <Description>Channel Filter Configuration</Description>
    <Bitfield>
      <Name>ADC_CIC_DECFACT</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Value>
        <Number>00</Number>
        <Brief>Decimation factor 12</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Decimation factor 24</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Decimation factor 48</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[ADC_CIC_DECFACT is a table index which programs the first decimation filter and program the RX filter bandwidth. ADC_CIC_DECFACT table index:
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>BB_CIC_DECFACT</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x14</Reset>
      <Description><![CDATA[BB_CIC_DECFACT configures the RX filter BW by changing decimation factor in the second decimation filter
<TABLE BORDER=1>
<TR>
<TD>Device</TD>
<TD>ADC_CIC_DECFACT</TD>
<TD>BB_CIC_DECFACT</TD>
<TD>RX Filter BW Range [kHz]</TD>
</TR>
<TR>
<TD>CC1200</TD>
<TD>12</TD>
<TD>1 - 44</TD>
<TD>37.9 - 1666.7</TD>
</TR>
<TR>
<TD>CC1200</TD>
<TD>24</TD>
<TD>1 - 44</TD>
<TD>18.9 - 833.3</TD>
<TR>
<TD>CC1200</TD>
<TD>48</TD>
<TD>1 - 44</TD>
<TD>9.5 - 416.7</TD>
</TR>
<TR>
<TD>CC1201</TD>
<TD>12</TD>
<TD>1 - 33</TD>
<TD>50.5 - 1666.7</TD>
<TR>
<TD>CC1201</TD>
<TD>24</TD>
<TD>1 - 16</TD>
<TD>52.1 - 833.3</TD>
</TR>
<TR>
<TD>CC1201</TD>
<TD>48</TD>
<TD>1 - 8</TD>
<TD>52.1 - 416.7</TD>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <RegReset>94</RegReset>
  </Register>
<!--MDMCFG1-->
  <Register>
    <Name>MDMCFG1</Name>
    <Address>0x11</Address>
    <Description>General Modem Parameter Configuration Reg. 1</Description>
    <Bitfield>
      <Name>CARRIER_SENSE_GATE</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Search for sync word regardless of CS</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Do not start sync search before CARRIER_SENSE is asserted</Brief>
      </Value>
      <Description><![CDATA[When CARRIER_SENSE_GATE is 1, the demodulator will not start to look for a sync word before CARRIER_SENSE is asserted
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FIFO_EN</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Data in/out through the serial pin(s) (the FIFOs are bypassed)</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Data in/out through the FIFOs</Brief>
      </Value>
      <Description><![CDATA[FIFO enable. Specifies if data to/from modem will be passed through the FIFOs or directly to the serial pin
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>MANCHESTER_EN</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>NRZ</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Manchester encoding/decoding</Brief>
      </Value>
      <Description><![CDATA[Manchester mode enable. Manchester encoding/decoding is only applicable to payload data including optional CRC. Manchester encoding/decoding is not supported for 4-(G)FSK
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>INVERT_DATA_EN</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Invert data disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Invert data enabled</Brief>
      </Value>
      <Description><![CDATA[Invert data enable. Invert payload data stream in RX and TX (only applicable to payload data including optional CRC)
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>COLLISION_DETECT_EN</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Collision detect disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>collision detect enabled</Brief>
      </Value>
      <Description><![CDATA[Collision detect enable. After a sync word is detected (SYNC_EVENT asserted), the receiver will always receive a packet. If collision detection is enabled, the receiver will continue to search for preamble. If a new preamble is found (PQT_REACHED asserted) and the RSSI has increased  10 or 16 dB during packet reception (depending on AGC_CFG1.RSSI_STEP_THR) a collision is detected and the COLLISION_FOUND flag will be asserted
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>DVGA_GAIN</Name>
      <Start>2</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Value>
        <Number>00</Number>
        <Brief>0 dB DVGA (preferred setting for RX filter bandwidth &lt; 100 kHz)</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>-18 dB DVGA (preferred setting for RX filter bandwidth &gt;= 100 kHz)</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>6 dB DVGA</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>9 dB DVGA</Brief>
      </Value>
      <Description><![CDATA[Fixed DVGA gain configuration. The DVGA configuration has impact on the RSSI  offset
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SINGLE_ADC_EN</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>IQ-channels</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Only I-channel</Brief>
      </Value>
      <Description><![CDATA[Configure the number of active receive channels. If this bit is set the power consumption will be reduced but the sensitivity level will be reduced by ~3 dB. Image rejection will not work
]]></Description>
    </Bitfield>
    <RegReset>46</RegReset>
  </Register>
<!--MDMCFG0-->
  <Register>
    <Name>MDMCFG0</Name>
    <Address>0x12</Address>
    <Description>General Modem Parameter Configuration Reg. 0</Description>
    <Bitfield>
      <Name>MDMCFG0_RESERVED7</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TRANSPARENT_MODE_EN</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Transparent mode disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Transparent mode enabled</Brief>
      </Value>
      <Description><![CDATA[Transparent mode enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TRANSPARENT_INTFACT</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>1x transparent signal interpolated one time before output (reset)</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>2x transparent signal interpolated two times before output</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>4x transparent signal interpolated four times before output</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[Transparent signal interpolation factor. The sample rate gives the jitter of the samples and the sample rate is given by:<BR/>
Sample Rate = f_xosc*Interpolation Facor/(Decimation Factor*CHAN_BW.BB_CIC_DECFACT) [Hz]<BR/>
The decimation factor is given by CHAN_BW.ADC_CIC_DECFACT while the interpolation factor is given below
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>DATA_FILTER_EN</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>00</Number>
        <Brief>Transparent data filter disabled and extended data filter disabled</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Transparent data filter disabled and extended data filter enabled</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Transparent data filter disabled and extended data filter disabled</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Transparent data filter enabled and extended data filter disabled</Brief>
      </Value>
      <Description><![CDATA[Transparent data filter and extended data filter enable. Enabling transparent data filter and/or extended data filter might Improve sensitivity. When TRANSPARENT_MODE_EN = 0 this bit should only be set when RX filter bandwidth/symbol rate > 10 and TOC_CFG.TOC_LIMIT = 0. The table below shows the status of the transparent data filter and the extended data filter for all combinations of TRANSPARENT_MODE_EN (MSB) and DATA_FILTER_EN (LSB)
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>VITERBI_EN</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Viterbi detection disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Viterbi detection enabled</Brief>
      </Value>
      <Description><![CDATA[Viterbi detection enable. Enabling Viterbi detection improves the sensitivity. The latency from the antenna to the signal is available in the RXFIFO or on the GPIO is increased by 5 bits for 2-ary modulation formats and 10 bits for 4-ary modulation formats. Minimum packet length = 2 bytes when Viterbi Detection and 4-(G)FSK is enabled
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>MDMCFG0_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>MDMCFG0_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>d</RegReset>
  </Register>
<!--SYMBOL_RATE2-->
  <Register>
    <Name>SYMBOL_RATE2</Name>
    <Address>0x13</Address>
    <Description>Symbol Rate Configuration Exponent and Mantissa [19:16]</Description>
    <Bitfield>
      <Name>SRATE_E</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x04</Reset>
      <Description><![CDATA[Symbol rate (exponent part)<BR/>
SRATE_E > 0 => Symbol Rate = f_xosc*(2^20+SRATE_M)*2^SRATE_E/2^39 [ksps]<BR/>
SRATE_E = 0 => Symbol Rate = f_xosc*SRATE_M/2^38 [ksps]
<TABLE BORDER=1>
<TR>
<TD>Modulation format / data encoding</TD>
<TD>Data rate / symbol rate Ratio</TD>
</TR>
<TR>
<TD>2-(G)FSK</TD>
<TD>1</TD>
</TR>
<TR>
<TD>4-(G)FSK</TD>
<TD>2</TD>
</TR>
<TR>
<TD>Manchester mode</TD>
<TD>0.5</TD>
</TR>
<TR>
<TD>DSSS mode</TD>
<TD>1/spreading factor</TD>
</TR>
<TR>
<TD>FEC</TD>
<TD>0.5</TD>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SRATE_M_19_16</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[Symbol rate (mantissa part [19:16]). See SRATE_E
]]></Description>
    </Bitfield>
    <RegReset>43</RegReset>
  </Register>
<!--SYMBOL_RATE1-->
  <Register>
    <Name>SYMBOL_RATE1</Name>
    <Address>0x14</Address>
    <Description>Symbol Rate Configuration Mantissa [15:8]</Description>
    <Bitfield>
      <Name>SRATE_M_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0xA9</Reset>
      <Description><![CDATA[Symbol rate (mantissa part [15:8]). See SYMBOL_RATE2
]]></Description>
    </Bitfield>
    <RegReset>a9</RegReset>
  </Register>
<!--SYMBOL_RATE0-->
  <Register>
    <Name>SYMBOL_RATE0</Name>
    <Address>0x15</Address>
    <Description>Symbol Rate Configuration Mantissa [7:0]</Description>
    <Bitfield>
      <Name>SRATE_M_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x2A</Reset>
      <Description><![CDATA[Symbol rate (mantissa part [7:0]). See SYMBOL_RATE2
]]></Description>
    </Bitfield>
    <RegReset>2a</RegReset>
  </Register>
<!--AGC_REF-->
  <Register>
    <Name>AGC_REF</Name>
    <Address>0x16</Address>
    <Description>AGC Reference Level Configuration</Description>
    <Bitfield>
      <Name>AGC_REFERENCE</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x36</Reset>
      <Description><![CDATA[AGC reference level. The AGC reference level must be higher than the minimum SNR to the demodulator. The AGC reduces the analog front end gain when the magnitude output from channel filter > AGC reference level. An optimum AGC reference level is given by several conditions, but a rule of thumb is to use the formula:<BR/>
AGC_REFERENCE = 10*log10(RX Filter BW) - 92 - RSSI Offset<BR/>
For Zero-IF configuration, AGC hysteresis > 3 dB, or modem format which needs SNR>15 dB a higher AGC reference value is needed
</br>
<TABLE BORDER=1>
<TR>
<TD>RX Filter BW</TD>
<TD>AGC_REFERENCE</TD>
</TR>
<TR>
<TD>10 kHz</TD>
<TD>0x2F (MDMCFG1.DVGA_GAIN = 0, RSSI offset ~ -99 dB)</TD>
</TR>
<TR>
<TD>100 kHz</TD>
<TD>0x27 (MDMCFG1.DVGA_GAIN = 1, RSSI offset ~ -81 dB) </TD>
</TR>
<TR>
<TD>200 kHz</TD>
<TD>0x2D (MDMCFG1.DVGA_GAIN = 1, RSSI offset ~ -81 dB)</TD>
</TR>
<TR>
<TD>500 kHz</TD>
<TD>0x2F (MDMCFG1.DVGA_GAIN = 1, RSSI offset ~ -81 dB)</TD>
/TR>
<TR>
<TD>1600 kHz</TD>
<TD>0x33 (MDMCFG1.DVGA_GAIN = 1, RSSI offset ~ -79 dB)</TD>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <RegReset>36</RegReset>
  </Register>
<!--AGC_CS_THR-->
  <Register>
    <Name>AGC_CS_THR</Name>
    <Address>0x17</Address>
    <Description>Carrier Sense Threshold Configuration</Description>
    <Bitfield>
      <Name>AGC_CS_THRESHOLD</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AGC carrier sense threshold. Two's complement number with 1 dB resolution
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AGC_GAIN_ADJUST-->
  <Register>
    <Name>AGC_GAIN_ADJUST</Name>
    <Address>0x18</Address>
    <Description>RSSI Offset Configuration</Description>
    <Bitfield>
      <Name>GAIN_ADJUSTMENT</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AGC gain adjustment. This register is used to adjust RSSI[11:0] to the actual carrier input signal level to compensate for interpolation gains (two's complement with 1 dB resolution)
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AGC_CFG3-->
  <Register>
    <Name>AGC_CFG3</Name>
    <Address>0x19</Address>
    <Description>Automatic Gain Control Configuration Reg. 3</Description>
    <Bitfield>
      <Name>AGC_SYNC_BEHAVIOUR</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x05</Reset>
      <Value>
        <Number>000</Number>
        <Brief>No AGC gain freeze. Keep computing/updating RSSI</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>AGC gain freeze. Keep computing/updating RSSI</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>No AGC gain freeze. Keep computing/updating RSSI (AGC slow mode enabled)</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>Freeze both AGC gain and RSSI</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>No AGC gain freeze. Keep computing/updating RSSI</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>Freeze both AGC gain and RSSI</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>No AGC gain freeze. Keep computing/updating RSSI (AGC slow mode enabled)</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>Freeze both AGC gain and RSSI</Brief>
      </Value>
      <Description><![CDATA[AGC behavior after sync word detection
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_MIN_GAIN</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x11</Reset>
      <Description><![CDATA[AGC minimum gain. Limits the AGC minimum gain compared to the preset gain table range. AGC_MIN_GAIN can have a value in the range<BR/>
0 to 17 when AGC_CFG2.FE_PERFORMANCE_MODE = 0 or 1,<BR/>
0 to 13 when AGC_CFG2.FE_PERFORMANCE_MODE = 10b and<BR/>
0 to 7 when AGC_CFG2.FE_PERFORMANCE_MODE = 11b
]]></Description>
    </Bitfield>
    <RegReset>b1</RegReset>
  </Register>
<!--AGC_CFG2-->
  <Register>
    <Name>AGC_CFG2</Name>
    <Address>0x1A</Address>
    <Description>Automatic Gain Control Configuration Reg. 2</Description>
    <Bitfield>
      <Name>START_PREVIOUS_GAIN_EN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Receiver starts with maximum gain value</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Receiver starts from previous gain value</Brief>
      </Value>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FE_PERFORMANCE_MODE</Name>
      <Start>6</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>00</Number>
        <Brief>Optimized linearity mode</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Normal operation mode</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Low power mode with reduced gain range</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Zero-IF mode</Brief>
      </Value>
      <Description><![CDATA[Controls which gain tables to be applied
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_MAX_GAIN</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AGC maximum gain. Limits the AGC maximum gain compared to the preset gain table range. AGC_MAX_GAIN can have a value in the range<BR/>
0 to 17 when AGC_CFG2.FE_PERFORMANCE_MODE = 0 or 1,<BR/>
0 to 13 when AGC_CFG2.FE_PERFORMANCE_MODE = 10b and<BR/>
0 to 7 when AGC_CFG2.FE_PERFORMANCE_MODE = 11b
]]></Description>
    </Bitfield>
    <RegReset>20</RegReset>
  </Register>
<!--AGC_CFG1-->
  <Register>
    <Name>AGC_CFG1</Name>
    <Address>0x1B</Address>
    <Description>Automatic Gain Control Configuration Reg. 1</Description>
    <Bitfield>
      <Name>AGC_CFG1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>RSSI_STEP_THR</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>RSSI step is 3 dB during sync search / RSSI step is 10 dB during packet reception</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>RSSI step is 6 dB during sync search / RSSI step is 16 dB during packet reception</Brief>
      </Value>
      <Description><![CDATA[AGC has a built in function to signal if there has been a step in the RSSI value. During sync search the difference between the current and the previous RSSI value is compared against the RSSI step (3 or 6 dB), while during packet reception, the difference between the current value and the value at sync found is compared against 10 or 16 dB
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_WIN_SIZE</Name>
      <Start>5</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Value>
        <Number>000</Number>
        <Brief>8 samples</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>16 samples</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>32 samples</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>64 samples</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>128 samples</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>256 samples</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[AGC integration window size for each value. Samples refer to the RX filter sampling frequency, which is programmed to be 4 times the desired RX filter BW
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_SETTLE_WAIT</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Value>
        <Number>000</Number>
        <Brief>24 samples</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>32 samples</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>40 samples</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>48 samples</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>64 samples</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>80 samples</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>96 samples</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>127 samples</Brief>
      </Value>
      <Description><![CDATA[Sets the wait time between AGC gain adjustments
]]></Description>
    </Bitfield>
    <RegReset>52</RegReset>
  </Register>
<!--AGC_CFG0-->
  <Register>
    <Name>AGC_CFG0</Name>
    <Address>0x1C</Address>
    <Description>Automatic Gain Control Configuration Reg. 0</Description>
    <Bitfield>
      <Name>AGC_HYST_LEVEL</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Value>
        <Number>00</Number>
        <Brief>2 dB</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>4 dB</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>7 dB</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>10 dB</Brief>
      </Value>
      <Description><![CDATA[AGC hysteresis level. The difference between the desired signal level and the actual signal level must be larger than AGC hysteresis level before the AGC changes the front end gain
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_SLEWRATE_LIMIT</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>60 dB</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>30 dB</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>18 dB</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>9 dB</Brief>
      </Value>
      <Description><![CDATA[AGC slew rate limit. Limits the maximum front end gain adjustment
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RSSI_VALID_CNT</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>1</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>2</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>5</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>9</Brief>
      </Value>
      <Description><![CDATA[Gives the number of new input samples to the moving average filter (internal RSSI estimates) that are required before the next update of the RSSI value. The RSSI_VALID signal will be asserted from the first RSSI update. RSSI_VALID is available on a GPIO or can be read from the RSSI0 register
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_ASK_DECAY</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Value>
        <Number>00</Number>
        <Brief>1200 samples</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>2400 samples</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>4700 samples</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>9500 samples</Brief>
      </Value>
      <Description><![CDATA[The OOK/ASK receiver uses a max peak magnitude (logic 1) tracker and low peak magnitude (logic 0) tracker to estimate ASK_THRESHOLD (decision level) as the average of the max and min value. The max peak magnitude value is also used by the AGC to set the gain. AGC_ASK_DECAY controls the max peak magnitude decay steps in OOK/ASK mode and defines the number of samples required for the max peak level to be reduced to 10% when receiving logic 0 after receiving a logic 1.
<BR/> <BR/>
Sample Rate = (f_xosc*Interpolation Factor)/(Decimation Factor*CHAN_BW.BB_CIC_DECFACT)[Hz]
<BR/> <BR/>
The decimation factor is given by CHAN_BW.ADC_CIC_DECFACT and the interpolation factor is given by SYNC_CFG0.RX_CONFIG_LIMITATION as follows:</br>
<TABLE BORDER=1>
<TR>
<TD>RX_CONFIG_LIMITATION = 0</TD>
<TD>Int. factor = 2</TD>
</TR>
<TR>
<TD>RX_CONFIG_LIMITATION = 1</TD>
<TD>Int. factor = 4</TD>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <RegReset>c3</RegReset>
  </Register>
<!--FIFO_CFG-->
  <Register>
    <Name>FIFO_CFG</Name>
    <Address>0x1D</Address>
    <Description>FIFO Configuration</Description>
    <Bitfield>
      <Name>CRC_AUTOFLUSH</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[Automatically flushes the last packet received in the RX FIFO if a CRC error occurred. If this bit has been turned off and should be turned on again, an SFRX strobe must first be issued
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FIFO_THR</Name>
      <Start>6</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Threshold value for the RX and TX FIFO. The threshold value is coded in opposite directions for the two FIFOs to give equal margin to the overflow and underflow conditions when the threshold is reached. I.e.; FIFO_THR = 0 means that there are 127 bytes in the TX FIFO and 1 byte in the RX FIFO, while FIFO_THR = 127 means that there are 0 bytes in the TX FIFO and 128 bytes in the RX FIFO when the thresholds are reached
]]></Description>
    </Bitfield>
    <RegReset>80</RegReset>
  </Register>
<!--DEV_ADDR-->
  <Register>
    <Name>DEV_ADDR</Name>
    <Address>0x1E</Address>
    <Description>Device Address Configuration</Description>
    <Bitfield>
      <Name>DEVICE_ADDR</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Address used for packet filtering in RX
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--SETTLING_CFG-->
  <Register>
    <Name>SETTLING_CFG</Name>
    <Address>0x1F</Address>
    <Description>Frequency Synthesizer Calibration and Settling Configuration</Description>
    <Bitfield>
      <Name>SETTLING_CFG_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_AUTOCAL</Name>
      <Start>4</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>00</Number>
        <Brief>Never (manually calibrate using SCAL strobe)</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>When going from IDLE to RX or TX (or FSTXON)</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>When going from RX or TX back to IDLE automatically</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Every 4th time when going from RX or TX to IDLE automatically</Brief>
      </Value>
      <Description><![CDATA[Auto calibration is performed:
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>LOCK_TIME</Name>
      <Start>2</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>00</Number>
        <Brief>50 / 20 us</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>75 / 30 us</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>100 / 40 us</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>150 / 60 us</Brief>
      </Value>
      <Description><![CDATA[Sets the time for the frequency synthesizer to settle to lock state. The table shows settling after calibration and settling when switching between TX and RX. Use values from SmartRF Studio
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSREG_TIME</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>30 us</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>60 us</Brief>
      </Value>
      <Description><![CDATA[Frequency synthesizer regulator settling time. Use values from SmartRF Studio
]]></Description>
    </Bitfield>
    <RegReset>b</RegReset>
  </Register>
<!--FS_CFG-->
  <Register>
    <Name>FS_CFG</Name>
    <Address>0x20</Address>
    <Description>Frequency Synthesizer Configuration</Description>
    <Bitfield>
      <Name>FS_CFG_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_LOCK_EN</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Out of lock detector disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Out of lock detector enabled</Brief>
      </Value>
      <Description><![CDATA[Out of lock detector enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSD_BANDSELECT</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Value>
        <Number>0000</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>0001</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>0010</Number>
        <Brief>820.0 - 960.0 MHz band (LO divider = 4)</Brief>
      </Value>
      <Value>
        <Number>0011</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>0100</Number>
        <Brief>410.0 - 480.0 MHz band (LO divider = 8)</Brief>
      </Value>
      <Value>
        <Number>0101</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>0110</Number>
        <Brief>273.3 - 320.0 MHz band (LO divider = 12)</Brief>
      </Value>
      <Value>
        <Number>0111</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>1000</Number>
        <Brief>205.0 - 240.0 MHz band (LO divider = 16)</Brief>
      </Value>
      <Value>
        <Number>1001</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>1010</Number>
        <Brief>164.0 - 192.0 MHz band (LO divider = 20)</Brief>
      </Value>
      <Value>
        <Number>1011</Number>
        <Brief>136.7 - 160.0 MHz band (LO divider = 24)</Brief>
      </Value>
      <Value>
        <Number>1100</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>1101</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>1110</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Value>
        <Number>1111</Number>
        <Brief>Not in use</Brief>
      </Value>
      <Description><![CDATA[Band select setting for LO divider
]]></Description>
    </Bitfield>
    <RegReset>2</RegReset>
  </Register>
<!--WOR_CFG1-->
  <Register>
    <Name>WOR_CFG1</Name>
    <Address>0x21</Address>
    <Description>eWOR Configuration Reg. 1</Description>
    <Bitfield>
      <Name>WOR_RES</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>High resolution</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Medium high resolution</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Medium low resolution</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Low resolution</Brief>
      </Value>
      <Description><![CDATA[eWOR timer resolution. Controls the t_Event0 and RX timeout resolution<BR/>
t_EVENT0 =  2^(5*WOR_RES)*EVENT0/f_rcosc [s] and<BR/>
RX Timeout = MAX[1,FLOOR[EVENT0/2^(RFEND_CFG1.RX_TIME+3)]]*2^(4*WOR_RES)*1250/f_xosc [s]
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>WOR_MODE</Name>
      <Start>5</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>000</Number>
        <Brief>Feedback mode</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>Normal mode</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>Legacy mode</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>Event1 mask mode</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>Event0 mask mode</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[eWOR mode
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>EVENT1</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Event 1 timeout<BR/>
t_EVENT1 = WOR_EVENT1/f_rcosc [s]
</br>
<TABLE BORDER=1>
<TR>
<TD>EVENT1 </TD>
<TD>WOR_EVENT1</TD>
</TR>
<TR>
<TD>000</TD>
<TD>4</TD>
</TR>
<TR>
<TD>001</TD>
<TD>6</TD>
</TR>
<TR>
<TD>010</TD>
<TD>8</TD>
</TR>
<TR>
<TD>011</TD>
<TD>12</TD>
</TR>
<TR>
<TD>100</TD>
<TD>16</TD>
</TR>
<TR>
<TD>101</TD>
<TD>24</TD>
</TR>
<TR>
<TD>110</TD>
<TD>32</TD>
</TR>
<TR>
<TD>111</TD>
<TD>48</TD>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <RegReset>8</RegReset>
  </Register>
<!--WOR_CFG0-->
  <Register>
    <Name>WOR_CFG0</Name>
    <Address>0x22</Address>
    <Description>eWOR Configuration Reg. 0</Description>
    <Bitfield>
      <Name>RX_DUTY_CYCLE_MODE</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>RXDCM disabled</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>RXDCM 0</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>RXDCM 1</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>RXDCM 2</Brief>
      </Value>
      <Description><![CDATA[RX duty cycle mode configuration. eWOR mode and RXDCM cannot be enabled at the same time. Both modes can be used in RX Sniff Mode implementation
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>DIV_256HZ_EN</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Clock division disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Clock division enabled</Brief>
      </Value>
      <Description><![CDATA[Clock division enable. Enables clock division in SLEEP mode
Setting DIV_256HZ_EN = 1 will lower the current consumption in SLEEP mode. Note that when this bit is set the radio should not be woken from SLEEP by pulling CSn low
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>EVENT2_CFG</Name>
      <Start>4</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Event 2 timeout<BR/>
t_EVENT2 = 2^WOR_EVENT2/f_rcosc [s]
<TABLE BORDER=1>
<TR>
<TD>EVENT2_CFG </TD>
<TD>WOR_EVENT2</TD>
</TR>
<TR>
<TD>00</TD>
<TD>Disabled</TD>
</TR>
<TR>
<TD>01</TD>
<TD>15</TD>
</TR>
<TR>
<TD>10</TD>
<TD>18</TD>
</TR>
<TR>
<TD>11</TD>
<TD>21</TD>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RC_MODE</Name>
      <Start>2</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>RCOSC calibration disabled</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>RCOSC calibration disabled</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>RCOSC calibration enabled</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>RCOSC calibration is enabled on every 4th time the device is powered up and goes from IDLE to RX. This setting should only be used together with eWOR</Brief>
      </Value>
      <Description><![CDATA[RCOSC calibration mode. Configures when the RCOSC calibration sequence is performed. If calibration is enabled, WOR_CFG0.RC_PD must be 0
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RC_PD</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>RCOSC is running</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>RCOSC is in power down</Brief>
      </Value>
      <Description><![CDATA[RCOSC power down signal
]]></Description>
    </Bitfield>
    <RegReset>21</RegReset>
  </Register>
<!--WOR_EVENT0_MSB-->
  <Register>
    <Name>WOR_EVENT0_MSB</Name>
    <Address>0x23</Address>
    <Description>Event 0 Configuration MSB</Description>
    <Bitfield>
      <Name>EVENT0_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Event 0 timeout (MSB)<BR/>
t_EVENT0 = 2^(5*WOR_CFG1.WOR_RES)*EVENT0/f_rcosc [s]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--WOR_EVENT0_LSB-->
  <Register>
    <Name>WOR_EVENT0_LSB</Name>
    <Address>0x24</Address>
    <Description>Event 0 Configuration LSB</Description>
    <Bitfield>
      <Name>EVENT0_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Event 0 timeout (LSB). See WOR_EVENT0_MSB
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--RXDCM_TIME-->
  <Register>
    <Name>RXDCM_TIME</Name>
    <Address>0x25</Address>
    <Description>RX Duty Cycle Mode Configuration</Description>
    <Bitfield>
      <Name>RX_DUTY_CYCLE_TIME</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Configures the time spent in RXDCM state</br>
RX_DUTY_CYCLE_TIME = 0:</br>
t_RXDCM = 2^WOR_CFG1.WOR_RES[us]</br>
RX_DUTY_CYCLE_TIME != 0:</br>
t_RXDCM = RX_DUTY_CYCLE_TIME*2^WOR_CFG1.WOR_RES[us]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PKT_CFG2-->
  <Register>
    <Name>PKT_CFG2</Name>
    <Address>0x26</Address>
    <Description>Packet Configuration Reg. 2</Description>
    <Bitfield>
      <Name>PKT_CFG2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>BYTE_SWAP_EN</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Data byte swap disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Data byte swap enabled</Brief>
      </Value>
      <Description><![CDATA[TX/RX data byte swap enable. In RX, all bits in the received data byte are swapped before written to the RX FIFO. In TX, all bits in the TX FIFO data byte are swapped before being transmitted
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FG_MODE_EN</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Standard packet mode enabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>802.15.4g packet mode enabled (will override other packet engine configuration settings)</Brief>
      </Value>
      <Description><![CDATA[Select between standard packet mode or 802.15.4g packet mode
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>CCA_MODE</Name>
      <Start>4</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>000</Number>
        <Brief>Always give a clear channel indication</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>Indicates clear channel when RSSI is below threshold</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>Indicates clear channel unless currently receiving a packet</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>Indicates clear channel when RSSI is below threshold and currently not receiving a packet</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>Indicates clear channel when RSSI is below threshold and ETSI LBT requirements are met</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[CCA mode. Selects the definition of a clear channel (when to assert the CCA signal)
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PKT_FORMAT</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>Normal mode / FIFO mode (MDMCFG1.FIFO_EN must be set to 1 and MDMCFG0.TRANSPARENT_MODE_EN must be set to 0)</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Synchronous serial mode (MDMCFG1.FIFO_EN must be set to 0 and MDMCFG0.TRANSPARENT_MODE_EN must be set to 0). This mode is only supported for 2&#x92;ary modulations formats in TX. In RX, both 2'ary and 4&#x92;ary modulation formats are supported</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Random mode. Send random data using PN9 generator (Set TXLAST != TXFIRST before strobing STX)</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Transparent serial mode (MDMCFG1.FIFO_EN must be set to 0 and MDMCFG0.TRANSPARENT_MODE_EN must be set to 1). This mode is only supported for 2&#x92;ary modulations formats</Brief>
      </Value>
      <Description><![CDATA[Packet format configuration
]]></Description>
    </Bitfield>
    <RegReset>4</RegReset>
  </Register>
<!--PKT_CFG1-->
  <Register>
    <Name>PKT_CFG1</Name>
    <Address>0x27</Address>
    <Description>Packet Configuration Reg. 1</Description>
    <Bitfield>
      <Name>FEC_EN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>FEC disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>FEC enabled</Brief>
      </Value>
      <Description><![CDATA[Forward error correction enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>WHITE_DATA</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Data whitening disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Data whitening enabled</Brief>
      </Value>
      <Description><![CDATA[Whitening enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PN9_SWAP_EN</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>PN9 sequence swap disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>PN9 sequence swap enabled</Brief>
      </Value>
      <Description><![CDATA[PN9 sequence swap enable Determines if the PN9 sequence is swapped prior to whitening/de-whitening. This settings is only used when WHITE_DATA = 1 and PKT_CFG2.FG_MODE_EN = 0
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>ADDR_CHECK_CFG</Name>
      <Start>4</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>No address check</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Address check, no broadcast</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Address check, 0x00 broadcast</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Address check, 0x00 and 0xFF broadcast</Brief>
      </Value>
      <Description><![CDATA[Address check configuration. Controls how address check is performed in RX mode
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>CRC_CFG</Name>
      <Start>2</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>00</Number>
        <Brief>CRC disabled for TX and RX</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>CRC calculation in TX mode and CRC check in RX mode enabled. CRC16(X16+X15+X2+1). Initialized to 0xFFFF</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>CRC calculation in TX mode and CRC check in RX mode enabled. CRC16(X16+X12+X5+1). Initialized to 0x0000</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>CRC calculation in TX mode and CRC check in RX mode enabled. 1's complement of CRC16(X16+X12+X5+1). Initialized to 0x1D0F</Brief>
      </Value>
      <Description><![CDATA[CRC configuration
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>APPEND_STATUS</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Status byte not appended</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Status byte appended</Brief>
      </Value>
      <Description><![CDATA[Append status bytes to RX FIFO. The status bytes contain info about CRC, RSSI, and LQI. When PKT_CFG1.CRC_CFG = 0, the CRC_OK field in the status byte will be 0
]]></Description>
    </Bitfield>
    <RegReset>3</RegReset>
  </Register>
<!--PKT_CFG0-->
  <Register>
    <Name>PKT_CFG0</Name>
    <Address>0x28</Address>
    <Description>Packet Configuration Reg. 0</Description>
    <Bitfield>
      <Name>PKT_CFG0_RESERVED7</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>LENGTH_CONFIG</Name>
      <Start>6</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>Fixed packet length mode. Packet Length configured through the PKT_LEN register</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Variable packet length mode. Packet length configured by the first byte received after sync word</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Infinite packet length mode</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Variable packet length mode. Length configured by the 5 LSB of the first byte received after sync word</Brief>
      </Value>
      <Description><![CDATA[Packet length configuration
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PKT_BIT_LEN</Name>
      <Start>4</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[In fixed packet length mode this field (when not zero) indicates the number of bits to send/receive after PKT_LEN number of bytes are sent/received. CRC is not supported when PKT_LEN_BIT != 0
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>UART_MODE_EN</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>UART mode disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>UART mode enabled</Brief>
      </Value>
      <Description><![CDATA[UART mode enable. When enabled, the packet engine will insert/remove a start and stop bit to/from the transmitted/received bytes
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>UART_SWAP_EN</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Swap disabled. Start/stop bits values are '1'/'0'</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Swap enabled. Start/stop bits values are '0'/'1'</Brief>
      </Value>
      <Description><![CDATA[Swap start and stop bits values
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--RFEND_CFG1-->
  <Register>
    <Name>RFEND_CFG1</Name>
    <Address>0x29</Address>
    <Description>RFEND Configuration Reg. 1</Description>
    <Bitfield>
      <Name>RFEND_CFG1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>RXOFF_MODE</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>IDLE</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>FSTXON</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>TX</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>RX</Brief>
      </Value>
      <Description><![CDATA[RXOFF mode. Determines the state the radio will enter after receiving a good packet
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RX_TIME</Name>
      <Start>3</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x07</Reset>
      <Description><![CDATA[RX timeout for sync word search in RX<BR/>
RX Timeout = MAX[1,FLOOR[EVENT0/2^(RX_TIME+3)]]*2^(4*WOR_CFG1.WOR_RES)*1250/f_xosc [s]<BR/>
The RX timeout is disabled when RX_TIME = 111b. EVENT0 is found in the WOR_EVENT0_MSB and WOR_EVENT0_LSB registers
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RX_TIME_QUAL</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Continue RX mode on RX timeout if sync word is found</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Continue RX mode on RX timeout if sync word has been found, or if PQT is reached or CS is asserted</Brief>
      </Value>
      <Description><![CDATA[RX timeout qualifier
]]></Description>
    </Bitfield>
    <RegReset>f</RegReset>
  </Register>
<!--RFEND_CFG0-->
  <Register>
    <Name>RFEND_CFG0</Name>
    <Address>0x2A</Address>
    <Description>RFEND Configuration Reg. 0</Description>
    <Bitfield>
      <Name>RFEND_CFG0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>CAL_END_WAKE_UP_EN</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Disable additional wake-up pulse</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Enable additional wake-up pulse</Brief>
      </Value>
      <Description><![CDATA[Enable additional wake-up pulses on the end of calibration. To be used together with the MCU_WAKEUP signal (MARC_STATUS_OUT will be 0)
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TXOFF_MODE</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>IDLE</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>FSTXON</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>TX</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>RX</Brief>
      </Value>
      <Description><![CDATA[TXOFF mode. Determines the state the radio will enter after transmitting a packet
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TERM_ON_BAD_PACKET_EN</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Terminate on bad packet disabled. When a bad packet is received (address, length, or CRC error) the radio stays in RX regardless of the RFEND_CFG1.RXOFF_MODE</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Terminate on bad packet enabled. RFEND_CFG1.RXOFF_MODE is ignored and the radio enters IDLE mode (or SLEEP mode if eWOR is used) when a bad packet has been received</Brief>
      </Value>
      <Description><![CDATA[Terminate on bad packet enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>ANT_DIV_RX_TERM_CFG</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>000</Number>
        <Brief>Antenna diversity and termination based on CS/PQT are disabled</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>RX termination based on CS is enabled (Antenna diversity OFF)</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>Single-switch antenna diversity on CS enabled. One or both antenna is CS evaluated once and RX will terminate if CS failed on both antennas</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>Continuous-switch antenna diversity on CS enabled. Antennas are switched until CS is asserted or RX timeout occurs (if RX timeout is enabled)</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>RX termination based on PQT is enabled (Antenna diversity OFF). &lt;BR&gt; MDMCFG1.CARRIER_SENSE_GATE must be 0 when this feature is used.</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>Single-switch antenna diversity on PQT enabled. One or both antennas are PQT evaluated once and RX will terminate if PQT is not reached on any of the antennas. &lt;BR&gt; MDMCFG1.CARRIER_SENSE_GATE must be 0 when this feature is used.</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>Continuous-switch antenna diversity on PQT enabled. Antennas are switched until PQT is reached or RX timeout occurs (if RX timeout is enabled). &lt;BR&gt; MDMCFG1.CARRIER_SENSE_GATE must be 0 when this feature is used.</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[Direct RX termination and antenna diversity configuration
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PA_CFG1-->
  <Register>
    <Name>PA_CFG1</Name>
    <Address>0x2B</Address>
    <Description>Power Amplifier Configuration Reg. 1</Description>
    <Bitfield>
      <Name>PA_CFG2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>PA_RAMP_SHAPE_EN</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>PA ramping and ASK/OOK shaping disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>PA ramping and ASK/OOK shaping enabled</Brief>
      </Value>
      <Description><![CDATA[PA ramping and ASK/OOK shaping enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PA_POWER_RAMP</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x3F</Reset>
      <Description><![CDATA[PA power ramp target level<BR/>
Output Power = (PA_POWER_RAMP+1)/2-18 [dBm]<BR/>
PA_POWER_RAMP >= 0x03 for the equation to be valid. {0x00, 0x01, 0x02} are special power levels
]]></Description>
    </Bitfield>
    <RegReset>7f</RegReset>
  </Register>
<!--PA_CFG0-->
  <Register>
    <Name>PA_CFG0</Name>
    <Address>0x2C</Address>
    <Description>Power Amplifier Configuration Reg. 0</Description>
    <Bitfield>
      <Name>FIRST_IPL</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Description><![CDATA[First intermediate power level. The first intermediate power level can be programmed within the power level range 0 - 7/16 in steps of 1/16
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SECOND_IPL</Name>
      <Start>4</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x05</Reset>
      <Description><![CDATA[Second intermediate power level. The second intermediate power level can be programmed within the power level range 8/16 - 15/16 in steps of 1/16
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RAMP_SHAPE</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Value>
        <Number>00</Number>
        <Brief>3/8 symbol ramp time and 1/32 symbol ASK/OOK shape length (legal UPSAMPLER_P values: 100b, 101b, and 110b)</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>3/2 symbol ramp time and 1/16 symbol ASK/OOK shape length (legal UPSAMPLER_P values: 011b, 100b, 101b, and 110b)</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>3 symbol ramp time and 1/8 symbol ASK/OOK shape length (legal UPSAMPLER_P values: 010b, 011b, 100b, 101b, and 110b)</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>6 symbol ramp time and 1/4 symbol ASK/OOK shape length (legal UPSAMPLER_P values: 010b , 010b, 011b, 100b, 101b, and 110b)</Brief>
      </Value>
      <Description><![CDATA[PA ramp time and ASK/OOK shape length. Note that only certain values of PA_CFG0.UPSAMPLER_P complies with the different ASK/OOK shape lengths
]]></Description>
    </Bitfield>
    <RegReset>56</RegReset>
  </Register>
<!--ASK_CFG-->
  <Register>
    <Name>ASK_CFG</Name>
    <Address>0x2D</Address>
    <Description>ASK Configuration</Description>
    <Bitfield>
      <Name>AGC_ASK_BW</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>ASK BW scale factor = 0.28</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>ASK BW scale factor = 0.18</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>ASK BW scale factor = 0.15</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>ASK BW scale factor = 0.14</Brief>
      </Value>
      <Description><![CDATA[Controls the bandwidth of the data filter in ASK/OOK mode. The -3 dB cut-off frequency (fCut-Off) is given below:</br>
RX_CONFIG_LIMITATION = 0:<BR/>
f-Cut-Off = 4*ASK BW Scale Factor*Rx Filter BW [Hz]<BR/>
RX_CONFIG_LIMITATION = 1:<BR/>
f-Cut-Off = 8*ASK BW Scale Factor*Rx Filter BW [Hz]<BR/>
RX_CONFIG_LIMITATION is found in SYNC_CFG0. A rule of thumb is to set f_Cut-Off >= 5*symbol rate
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>ASK_DEPTH</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x0F</Reset>
      <Description><![CDATA[ASK/OOK depth<BR/>
A_Max = (PA_CFG1.PA_POWER_RAMP+1)/2-18 [dBm]<BR/>
A_Min = (PA_CFG1.PA_POWER_RAMP+1-ASK_DEPTH)/2-18 [dBm]<BR/>
Minimum PA power level is -16 dBm. PA_POWER_RAMP - ASK_DEPTH = 0x00 is OOK off state (< -50 dBm)
]]></Description>
    </Bitfield>
    <RegReset>f</RegReset>
  </Register>
<!--PKT_LEN-->
  <Register>
    <Name>PKT_LEN</Name>
    <Address>0x2E</Address>
    <Description>Packet Length Configuration</Description>
    <Bitfield>
      <Name>PACKET_LENGTH</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[In fixed length mode this field indicates the packet length, and a value of 0 indicates the length to be 256 bytes. In variable length packet mode, this value indicates the maximum allowed length packets
]]></Description>
    </Bitfield>
    <RegReset>3</RegReset>
  </Register>
<!-- XmlAppender: Start of content from 'xml/extended_reg_block_external.xml' -->
<!--IF_MIX_CFG-->
  <Register>
    <Name>IF_MIX_CFG</Name>
    <Address>0x2F00</Address>
    <Description>IF Mix Configuration</Description>
    <Bitfield>
      <Name>IF_MIX_CFG_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>CMIX_CFG</Name>
      <Start>4</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>000</Number>
        <Brief>Zero-IF</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>f_IF = -f_xosc/(Decimation Factor*4)[kHz]</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>f_IF = -f_xosc/(Decimation Factor*6)[kHz]</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>f_IF = -f_xosc/(Decimation Factor*8)[kHz]</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>Zero-IF</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>f_IF = f_xosc/(Decimation Factor*4)[kHz]</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>f_IF = f_xosc/(Decimation Factor*6)[kHz]</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>f_IF = f_xosc/(Decimation Factor*8)[kHz]</Brief>
      </Value>
      <Description><![CDATA[Intermediate frequency configuration. The decimation factor is given by CHAN_BW.ADC_CIC_DECFACT
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_MIX_CFG_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_MIX_CFG_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FREQOFF_CFG-->
  <Register>
    <Name>FREQOFF_CFG</Name>
    <Address>0x2F01</Address>
    <Description>Frequency Offset Correction Configuration</Description>
    <Bitfield>
      <Name>FREQOFF_CFG_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FOC_EN</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Frequency offset correction disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Frequency offset correction enabled</Brief>
      </Value>
      <Description><![CDATA[Frequency offset correction enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FOC_CFG</Name>
      <Start>4</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>FOC after channel filter (typical 0 - 1 preamble bytes for settling)</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>FOC in FS enabled. Loop gain factor is 1/128 (typical 2 - 4 preamble bytes for settling)</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>FOC in FS enabled. Loop gain factor is 1/256 (typical 2 - 4 preamble bytes for settling)</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>FOC in FS enabled. Loop gain factor is 1/512 (typical 2 - 4 preamble bytes for settling)</Brief>
      </Value>
      <Description><![CDATA[Frequency offset correction configuration. FOC_CFG != 00b enables a narrower RX filter BW than FOC_CFG = 00b but needs longer settle time. When FOC in FS is enabled, the device automatically switch to 'FOC after channel filter' when a sync word is detected.
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FOC_LIMIT</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>RX filter bandwidth/4</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>RX filter bandwidth/8</Brief>
      </Value>
      <Description><![CDATA[FOC limit. This is the maximum frequency offset correction in the frequency synthesizer. Only valid when FOC_CFG != 00b
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FOC_KI_FACTOR</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>000</Number>
        <Brief>Frequency offset compensation disabled after sync detected (typical setting for short packets)</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>Frequency offset compensation during packet reception with loop gain factor = 1/32 (fast loop)</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>Frequency offset compensation during packet reception with loop gain factor = 1/64</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>Frequency offset compensation during packet reception with loop gain factor = 1/128 (slow loop)</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>Frequency offset compensation with Loop Gain factor 1/128 (fast loop)</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>Frequency offset compensation with Loop Gain factor 1/256</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>Frequency offset compensation with Loop Gain factor 1/512</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>Frequency offset compensation with Loop Gain factor 1/1024 (slow loop)</Brief>
      </Value>
      <Description><![CDATA[Frequency offset correction<BR/>
MDMCFG0.TRANSPARENT_MODE_EN | FOC_KI_FACTOR
]]></Description>
    </Bitfield>
    <RegReset>20</RegReset>
  </Register>
<!--TOC_CFG-->
  <Register>
    <Name>TOC_CFG</Name>
    <Address>0x2F02</Address>
    <Description>Timing Offset Correction Configuration</Description>
    <Bitfield>
      <Name>TOC_LIMIT</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>&lt; 0.2 %</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>&lt; 2 %</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>&lt; 12 % (MDMCFG1.CARRIER_SENSE_GATE must be set)</Brief>
      </Value>
      <Description><![CDATA[Timing offset correction limit. TOC_LIMIT specifies maximum symbol rate offset the receiver is able to handle. TOC_LIMIT != 00b requires 2 - 4 bytes preamble for symbol rate offset compensation
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TOC_PRE_SYNC_BLOCKLEN</Name>
      <Start>5</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Symbol by Symbol Timing Error Proportional Scale Factor</Brief>
      </Value>
      <Description><![CDATA[When TOC_LIMIT = 0 the receiver uses a block based time offset error calculation algorithm where the block length is configurable through register TOC_CFG. Before a sync word is found (SYNC_EVENT is asserted) the TOC_PRE_SYNC_BLOCKLEN sets the actual block length used for the time offset algorithm<BR/>
<TABLE BORDER=1>
<TR>
<TD>000</TD>
<TD>8 symbols integration window</TD>
</TR>
<TR>
<TD>001</TD>
<TD>16 symbols integration window</TD>
</TR>
<TR>
<TD>010</TD>
<TD>32 symbols integration window</TD>
</TR>
<TR>
<TD>011</TD>
<TD>64 symbols integration window</TD>
</TR>
<TR>
<TD>100</TD>
<TD>128 symbols integration window</TD>
</TR>
<TR>
<TD>101</TD>
<TD>256 symbols integration window</TD>
</TR>
<TR>
<TD>110</TD>
<TD>Reserved</TD>
</TR>
<TR>
<TD>111</TD>
<TD>Reserved</TD>
</TR>
</TABLE>
<TABLE BORDER=1>
<TR>
<TD>000</TD>
<TD>Proportional scale factor = 8/16</TD>
</TR>
<TR>
<TD>001</TD>
<TD>Proportional scale factor = 6/16</TD>
</TR>
<TR>
<TD>010</TD>
<TD>Proportional scale factor = 2/16</TD>
</TR>
<TR>
<TD>011</TD>
<TD>Proportional scale factor = 1/16</TD>
</TR>
<TR>
<TD>1XX</TD>
<TD>Proportional scale factor = 1/16 after sync found
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TOC_POST_SYNC_BLOCKLEN</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Symbol by Symbol Timing Error Integral Scale Factor</Brief>
      </Value>
      <Description><![CDATA[When TOC_LIMIT = 0 the receiver uses a block based time offset error calculation algorithm where the block length is configurable through register TOC_CFG. After a sync word is found (SYNC_EVENT is asserted) the TOC_POST_SYNC_BLOCKLEN sets the actual block length used for the time offset algorithm<BR/>
<TABLE BORDER=1>
<TR>
<TD>000</TD>
<TD>8 symbols integration window</TD>
</TR>
<TR>
<TD>001</TD>
<TD>16 symbols integration window</TD>
</TR>
<TR>
<TD>010</TD>
<TD>32 symbols integration window</TD>
</TR>
<TR>
<TD>011</TD>
<TD>64 symbols integration window</TD>
</TR>
<TR>
<TD>100</TD>
<TD>128 symbols integration window</TD>
</TR>
<TR>
<TD>101</TD>
<TD>256 symbols integration window</TD>
</TR>
<TR>
<TD>110</TD>
<TD>Reserved</TD>
</TR>
<TR>
<TD>111</TD>
<TD>Reserved</TD>
</TR>
</TABLE>
<TABLE BORDER=1>
<TR>
<TD>000</TD>
<TD>Integral scale factor = 8/32</TD>
</TR>
<TR>
<TD>001</TD>
<TD>Integral scale factor = 6/32</TD>
</TR>
<TR>
<TD>010</TD>
<TD>Integral scale factor = 2/32</TD>
</TR>
<TR>
<TD>011</TD>
<TD>Integral scale factor = 1/32</TD>
</TR>
<TR>
<TD>1XX</TD>
<TD>Integral scale factor = 1/32 after sync found
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <RegReset>b</RegReset>
  </Register>
<!--MARC_SPARE-->
  <Register>
    <Name>MARC_SPARE</Name>
    <Address>0x2F03</Address>
    <Description>MARC Spare</Description>
    <Bitfield>
      <Name>MARC_SPARE_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>AES_COMMANDS</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>1000</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Value>
        <Number>1001</Number>
        <Brief>AES_TXFIFO</Brief>
      </Value>
      <Value>
        <Number>1010</Number>
        <Brief>AES_RXFIFO</Brief>
      </Value>
      <Value>
        <Number>1111</Number>
        <Brief>Reserved</Brief>
      </Value>
      <Description><![CDATA[High level commands used to accelerate AES operations on the FIFO content
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--ECG_CFG-->
  <Register>
    <Name>ECG_CFG</Name>
    <Address>0x2F04</Address>
    <Description>External Clock Frequency Configuration</Description>
    <Bitfield>
      <Name>ECG_CFG_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>EXT_CLOCK_FREQ</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00000</Number>
        <Brief>64</Brief>
      </Value>
      <Value>
        <Number>00001</Number>
        <Brief>62</Brief>
      </Value>
      <Value>
        <Number>00010</Number>
        <Brief>60</Brief>
      </Value>
      <Value>
        <Number>00011</Number>
        <Brief>58</Brief>
      </Value>
      <Value>
        <Number>00100</Number>
        <Brief>56</Brief>
      </Value>
      <Value>
        <Number>00101</Number>
        <Brief>54</Brief>
      </Value>
      <Value>
        <Number>00110</Number>
        <Brief>52</Brief>
      </Value>
      <Value>
        <Number>00111</Number>
        <Brief>50</Brief>
      </Value>
      <Value>
        <Number>01000</Number>
        <Brief>48</Brief>
      </Value>
      <Value>
        <Number>01001</Number>
        <Brief>46</Brief>
      </Value>
      <Value>
        <Number>01010</Number>
        <Brief>44</Brief>
      </Value>
      <Value>
        <Number>01011</Number>
        <Brief>42</Brief>
      </Value>
      <Value>
        <Number>01100</Number>
        <Brief>40</Brief>
      </Value>
      <Value>
        <Number>01101</Number>
        <Brief>38</Brief>
      </Value>
      <Value>
        <Number>01110</Number>
        <Brief>36</Brief>
      </Value>
      <Value>
        <Number>01111</Number>
        <Brief>34</Brief>
      </Value>
      <Value>
        <Number>10000</Number>
        <Brief>32</Brief>
      </Value>
      <Value>
        <Number>10001</Number>
        <Brief>30</Brief>
      </Value>
      <Value>
        <Number>10010</Number>
        <Brief>28</Brief>
      </Value>
      <Value>
        <Number>10011</Number>
        <Brief>26</Brief>
      </Value>
      <Value>
        <Number>10100</Number>
        <Brief>24</Brief>
      </Value>
      <Value>
        <Number>10101</Number>
        <Brief>22</Brief>
      </Value>
      <Value>
        <Number>10110</Number>
        <Brief>20</Brief>
      </Value>
      <Value>
        <Number>10111</Number>
        <Brief>18</Brief>
      </Value>
      <Value>
        <Number>11000</Number>
        <Brief>16</Brief>
      </Value>
      <Value>
        <Number>11001</Number>
        <Brief>14</Brief>
      </Value>
      <Value>
        <Number>11010</Number>
        <Brief>12</Brief>
      </Value>
      <Value>
        <Number>11011</Number>
        <Brief>10</Brief>
      </Value>
      <Value>
        <Number>11100</Number>
        <Brief>8</Brief>
      </Value>
      <Value>
        <Number>11101</Number>
        <Brief>6</Brief>
      </Value>
      <Value>
        <Number>11110</Number>
        <Brief>4</Brief>
      </Value>
      <Value>
        <Number>11111</Number>
        <Brief>3</Brief>
      </Value>
      <Description><![CDATA[External clock frequency. Controls division factor
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--MDMCFG2-->
  <Register>
    <Name>MDMCFG2</Name>
    <Address>0x2F05</Address>
    <Description>General Modem Parameter Configuration Reg. 2</Description>
    <Bitfield>
      <Name>ASK_SHAPE</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>3</Number>
        <Brief>MDMCFG2.UPSAMPLER_P = 4 - PA_CFG0.RAMP_SHAPE + ASK_SHAPE&lt;BR/&gt;</Brief>
      </Value>
      <Value>
        <Number>3</Number>
        <Brief>MDMCFG2.UPSAMPLER_P = 5 - PA_CFG0.RAMP_SHAPE + ASK_SHAPE</Brief>
      </Value>
      <Value>
        <Number>00</Number>
        <Brief>8</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>16</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>32</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>128</Brief>
      </Value>
      <Description><![CDATA[Sets the resolution of an ASK bit transition (# of points). The following rule must be satisfied:<BR/>
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SYMBOL_MAP_CFG</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Symbol map configuration. Configures the modulated symbol mapping definition from data bit to modulated symbols. For 2'ary modulation schemes the symbol mapping definition is as follows:
<TABLE BORDER=1>
<TR>
<TD>Data Bit</TD>
<TD>SYMBOL_MAP_CFG = 00</TD>
<TD>SYMBOL_MAP_CFG = 01</TD>
<TD>SYMBOL_MAP_CFG = 10</TD>
<TD>SYMBOL_MAP_CFG  = 11</TD>
<TR>
<TD>0</TD>
<TD>-Deviation [Amin]</TD>
<TD>Deviation [Amax]</TD>
<TD>Deviation [Amax]</TD>
<TD>Deviation [Amax]</TD>
</TR>
<TR>
<TD>1</TD>
<TD>Devation [Amax]</TD>
<TD>-Devation [Amin]</TD>
<TD>-Devation [Amin]</TD>
<TD>-Devation [Amin]</TD>
</TR>
</TABLE>
OOK/ASK: Amax = Maximum amplitude, Amin = Minimum amplitude<BR/>
For 4'ary modulation schemes the symbol mapping definition is as follows:
<TABLE BORDER=1>
<TR>
<TD>Data Bit(MSB,LSB)</TD>
<TD>SYMBOL_MAP_CFG = 00</TD>
<TD>SYMBOL_MAP_CFG = 01</TD>
<TD>SYMBOL_MAP_CFG = 10</TD>
<TD>SYMBOL_MAP_CFG = 11</TD>
<TR>
<TD>00</TD>
<TD>-Deviation/3</TD>
<TD>-Deviation</TD>
<TD>Deviation/3</TD>
<TD>Deviation</TD>
</TR>
<TR>
<TD>01</TD>
<TD>-Deviation</TD>
<TD>-Deviation/3</TD>
<TD>Deviation</TD>
<TD>Deviation/3</TD>
</TR>
<TR>
<TD>10</TD>
<TD>Deviation/3</TD>
<TD>Deviation</TD>
<TD>-Deviation/3</TD>
<TD>-Deviation</TD>
</TR>
<TR>
<TD>11</TD>
<TD>Deviation</TD>
<TD>Deviation/3</TD>
<TD>-Deviation</TD>
<TD>-Deviation/3</TD>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>UPSAMPLER_P</Name>
      <Start>3</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x04</Reset>
      <Value>
        <Number>000</Number>
        <Brief>TX upsampler factor P = 1 (bypassed)</Brief>
      </Value>
      <Value>
        <Number>001</Number>
        <Brief>TX upsampler factor P = 2</Brief>
      </Value>
      <Value>
        <Number>010</Number>
        <Brief>TX upsampler factor P = 4</Brief>
      </Value>
      <Value>
        <Number>011</Number>
        <Brief>TX upsampler factor P = 8</Brief>
      </Value>
      <Value>
        <Number>100</Number>
        <Brief>TX upsampler factor P = 16</Brief>
      </Value>
      <Value>
        <Number>101</Number>
        <Brief>TX upsampler factor P = 32</Brief>
      </Value>
      <Value>
        <Number>110</Number>
        <Brief>TX upsampler factor P = 64</Brief>
      </Value>
      <Value>
        <Number>111</Number>
        <Brief>Not used</Brief>
      </Value>
      <Description><![CDATA[UPSAMPLER_P configures the variable upsampling factor P for the TX upsampler. The total upsampling factor = 16*P. The upsampler factor P must satisfy the following:<BR/>
Symbol Rate*16*P < f_xosc/4, , where P should be as large as possible<BR/>
The upsampler reduces repetitive spectrum at 16*symbol rate
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>CFM_DATA_EN</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>CFM mode disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>CFM mode enabled (write frequency word directly)</Brief>
      </Value>
      <Description><![CDATA[Custom frequency modulation enable
]]></Description>
    </Bitfield>
    <RegReset>8</RegReset>
  </Register>
<!--EXT_CTRL-->
  <Register>
    <Name>EXT_CTRL</Name>
    <Address>0x2F06</Address>
    <Description>External Control Configuration</Description>
    <Bitfield>
      <Name>EXT_CTRL_NOT_USED</Name>
      <Start>7</Start>
      <Stop>3</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>PIN_CTRL_EN</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Pin control disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Pin control enabled</Brief>
      </Value>
      <Description><![CDATA[Pin control enable. Pin control reuses the SPI interface pins to execute SRX, STX, SPWD, and IDLE strobes
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>EXT_40K_CLOCK_EN</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>External 40k clock disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>External 40k clock enabled. IOCFG3.GPIO3_CFG must be set to HIGHZ (EXT_40K_CLOCK)</Brief>
      </Value>
      <Description><![CDATA[External 40k clock enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>BURST_ADDR_INCR_EN</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Burst address increment disabled (i.e. consecutive writes to the same address location in burst mode)</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Burst address increment enabled (i.e. the address is incremented during burst access)</Brief>
      </Value>
      <Description><![CDATA[Burst address increment enable
]]></Description>
    </Bitfield>
    <RegReset>1</RegReset>
  </Register>
<!--RCCAL_FINE-->
  <Register>
    <Name>RCCAL_FINE</Name>
    <Address>0x2F07</Address>
    <Description>RC Oscillator Calibration Fine</Description>
    <Bitfield>
      <Name>RCCAL_FINE_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>RCC_FINE</Name>
      <Start>6</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[40 kHz RCOSC calibrated fine value
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--RCCAL_COARSE-->
  <Register>
    <Name>RCCAL_COARSE</Name>
    <Address>0x2F08</Address>
    <Description>RC Oscillator Calibration Coarse</Description>
    <Bitfield>
      <Name>RCCAL_COARSE_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>RCC_COARSE</Name>
      <Start>6</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[40 kHz RCOSC calibrated coarse value
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--RCCAL_OFFSET-->
  <Register>
    <Name>RCCAL_OFFSET</Name>
    <Address>0x2F09</Address>
    <Description>RC Oscillator Calibration Clock Offset</Description>
    <Bitfield>
      <Name>RCCAL_OFFSET_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>RCCAL_OFFSET_RESERVED4_0</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FREQOFF1-->
  <Register>
    <Name>FREQOFF1</Name>
    <Address>0x2F0A</Address>
    <Description>Frequency Offset MSB</Description>
    <Bitfield>
      <Name>FREQ_OFF_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Frequency offset [15:8]. Updated by user or SAFC strobe. The value is in two's complement format
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FREQOFF0-->
  <Register>
    <Name>FREQOFF0</Name>
    <Address>0x2F0B</Address>
    <Description>Frequency Offset LSB</Description>
    <Bitfield>
      <Name>FREQ_OFF_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Frequency offset [7:0]. Updated by user or SAFC strobe. The value is in two's complement format
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FREQ2-->
  <Register>
    <Name>FREQ2</Name>
    <Address>0x2F0C</Address>
    <Description>Frequency Configuration [23:16]</Description>
    <Bitfield>
      <Name>FREQ_23_16</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Frequency [23:16]<BR/>
f_RF = f_vco/LO Divider [Hz] where f_vco = (FREQ/(2^16)*f_xosc) + (FREQOFF/(2^18)*f_xosc) [Hz] and the LO Divider is given by FS_CFG.FSD_BANDSELECT
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FREQ1-->
  <Register>
    <Name>FREQ1</Name>
    <Address>0x2F0D</Address>
    <Description>Frequency Configuration [15:8]</Description>
    <Bitfield>
      <Name>FREQ_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Frequency [15:8]. See FREQ2
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FREQ0-->
  <Register>
    <Name>FREQ0</Name>
    <Address>0x2F0E</Address>
    <Description>Frequency Configuration [7:0]</Description>
    <Bitfield>
      <Name>FREQ_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Frequency [7:0]. See FREQ2
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--IF_ADC2-->
  <Register>
    <Name>IF_ADC2</Name>
    <Address>0x2F0F</Address>
    <Description>Analog to Digital Converter Configuration Reg. 2</Description>
    <Bitfield>
      <Name>IF_ADC2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_ADC2_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>2</RegReset>
  </Register>
<!--IF_ADC1-->
  <Register>
    <Name>IF_ADC1</Name>
    <Address>0x2F10</Address>
    <Description>Analog to Digital Converter Configuration Reg. 1</Description>
    <Bitfield>
      <Name>IF_ADC1_RESERVED7_6</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_ADC1_RESERVED5_4</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_ADC1_RESERVED3_2</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_ADC1_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>5a</RegReset>
  </Register>
<!--IF_ADC0-->
  <Register>
    <Name>IF_ADC0</Name>
    <Address>0x2F11</Address>
    <Description>Analog to Digital Converter Configuration Reg. 0</Description>
    <Bitfield>
      <Name>if_adc0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_ADC0_RESERVED5_3</Name>
      <Start>5</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_ADC0_RESERVED2_1</Name>
      <Start>2</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IF_ADC0_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>1a</RegReset>
  </Register>
<!--FS_DIG1-->
  <Register>
    <Name>FS_DIG1</Name>
    <Address>0x2F12</Address>
    <Description>Frequency Synthesizer Digital Reg. 1</Description>
    <Bitfield>
      <Name>fs_dig1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>fsd_lpf_switch1_en</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Loop-filter switch configuration 1
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>fsd_lpf_switch2_en</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Loop-filter switch configuration 2
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DIG1_RESERVED3_2</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DIG1_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DIG1_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>8</RegReset>
  </Register>
<!--FS_DIG0-->
  <Register>
    <Name>FS_DIG0</Name>
    <Address>0x2F13</Address>
    <Description>Frequency Synthesizer Digital Reg. 0</Description>
    <Bitfield>
      <Name>FS_DIG0_RESERVED7_6</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DIG0_RESERVED5_4</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RX_LPF_BW</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Value>
        <Number>00</Number>
        <Brief>200 kHz</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>300 kHz</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>400 kHz</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>500 kHz</Brief>
      </Value>
      <Description><![CDATA[FS loop bandwidth in RX
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TX_LPF_BW</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Value>
        <Number>00</Number>
        <Brief>200 kHz</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>300 kHz</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>400 kHz</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>500 kHz</Brief>
      </Value>
      <Description><![CDATA[FS loop bandwidth in TX
]]></Description>
    </Bitfield>
    <RegReset>5a</RegReset>
  </Register>
<!--FS_CAL3-->
  <Register>
    <Name>FS_CAL3</Name>
    <Address>0x2F14</Address>
    <Description>Frequency Synthesizer Calibration Reg. 3</Description>
    <Bitfield>
      <Name>FS_CAL3_RESERVED7</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>KVCO_HIGH_RES_CFG</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>High resolution disabled (normal resolution mode)</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>High resolution enabled (increased charge pump calibration, but will extend the calibration time)</Brief>
      </Value>
      <Description><![CDATA[KVCO high resolution enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_CAL3_RESERVED5_4</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_CAL3_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_CAL2-->
  <Register>
    <Name>FS_CAL2</Name>
    <Address>0x2F15</Address>
    <Description>Frequency Synthesizer Calibration Reg. 2</Description>
    <Bitfield>
      <Name>fs_cal2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_CAL2_RESERVED5_0</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x20</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>20</RegReset>
  </Register>
<!--FS_CAL1-->
  <Register>
    <Name>FS_CAL1</Name>
    <Address>0x2F16</Address>
    <Description>Frequency Synthesizer Calibration Reg. 1</Description>
    <Bitfield>
      <Name>FS_CAL1_RESERVED7_6</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_CAL1_RESERVED5_4</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_CAL1_RESERVED3_2</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_CAL1_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_CAL0-->
  <Register>
    <Name>FS_CAL0</Name>
    <Address>0x2F17</Address>
    <Description>Frequency Synthesizer Calibration Reg. 0</Description>
    <Bitfield>
      <Name>fs_cal0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>LOCK_CFG</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief>Average the measurement over 512 cycles</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>Average the measurement over 1024 cycles</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>Average the measurement over 256 cycles</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>Infinite average</Brief>
      </Value>
      <Description><![CDATA[Out of lock detector average time
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_CAL0_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_CHP-->
  <Register>
    <Name>FS_CHP</Name>
    <Address>0x2F18</Address>
    <Description>Frequency Synthesizer Charge Pump Configuration</Description>
    <Bitfield>
      <Name>fs_chp_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_CHP_RESERVED5_0</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x28</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>28</RegReset>
  </Register>
<!--FS_DIVTWO-->
  <Register>
    <Name>FS_DIVTWO</Name>
    <Address>0x2F19</Address>
    <Description>Frequency Synthesizer Divide by 2</Description>
    <Bitfield>
      <Name>FS_DIVTWO_NOT_USED</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DIVTWO_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>1</RegReset>
  </Register>
<!--FS_DSM1-->
  <Register>
    <Name>FS_DSM1</Name>
    <Address>0x2F1A</Address>
    <Description>FS Digital Synthesizer Module Configuration Reg. 1</Description>
    <Bitfield>
      <Name>FS_DSM1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>3</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DSM1_RESERVED2</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DSM1_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_DSM0-->
  <Register>
    <Name>FS_DSM0</Name>
    <Address>0x2F1B</Address>
    <Description>FS Digital Synthesizer Module Configuration Reg. 0</Description>
    <Bitfield>
      <Name>FS_DSM0_RESERVED7_4</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DSM0_RESERVED3</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DSM0_RESERVED2_0</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>3</RegReset>
  </Register>
<!--FS_DVC1-->
  <Register>
    <Name>FS_DVC1</Name>
    <Address>0x2F1C</Address>
    <Description>Frequency Synthesizer Divider Chain Configuration Reg. 1</Description>
    <Bitfield>
      <Name>FS_DVC1_RESERVED7_6</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DVC1_RESERVED5_4</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DVC1_RESERVED3_2</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DVC1_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>ff</RegReset>
  </Register>
<!--FS_DVC0-->
  <Register>
    <Name>FS_DVC0</Name>
    <Address>0x2F1D</Address>
    <Description>Frequency Synthesizer Divider Chain Configuration Reg. 0</Description>
    <Bitfield>
      <Name>FS_DVC0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DVC0_RESERVED4_3</Name>
      <Start>4</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_DVC0_RESERVED2_0</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x07</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>1f</RegReset>
  </Register>
<!--FS_LBI-->
  <Register>
    <Name>FS_LBI</Name>
    <Address>0x2F1E</Address>
    <Description>Frequency Synthesizer Local Bias Configuration</Description>
    <Bitfield>
      <Name>FS_LBI_NOT_USED</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_PFD-->
  <Register>
    <Name>FS_PFD</Name>
    <Address>0x2F1F</Address>
    <Description>Frequency Synthesizer Phase Frequency Detector Configuration</Description>
    <Bitfield>
      <Name>FSD_PFD_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_PFD_RESERVED6_4</Name>
      <Start>6</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x05</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_PFD_RESERVED3_2</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_PFD_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>51</RegReset>
  </Register>
<!--FS_PRE-->
  <Register>
    <Name>FS_PRE</Name>
    <Address>0x2F20</Address>
    <Description>Frequency Synthesizer Prescaler Configuration</Description>
    <Bitfield>
      <Name>fs_pre_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_PRE_RESERVED6_5</Name>
      <Start>6</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_PRE_RESERVED4_3</Name>
      <Start>4</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_PRE_RESERVED2_0</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x04</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>2c</RegReset>
  </Register>
<!--FS_REG_DIV_CML-->
  <Register>
    <Name>FS_REG_DIV_CML</Name>
    <Address>0x2F21</Address>
    <Description>Frequency Synthesizer Divider Regulator Configuration</Description>
    <Bitfield>
      <Name>FS_REG_DIV_CML_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_REG_DIV_CML_RESERVED4_2</Name>
      <Start>4</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x04</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_REG_DIV_CML_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>11</RegReset>
  </Register>
<!--FS_SPARE-->
  <Register>
    <Name>FS_SPARE</Name>
    <Address>0x2F22</Address>
    <Description>Frequency Synthesizer Spare</Description>
    <Bitfield>
      <Name>FS_SPARE_RESERVED7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_VCO4-->
  <Register>
    <Name>FS_VCO4</Name>
    <Address>0x2F23</Address>
    <Description>FS Voltage Controlled Oscillator Configuration Reg. 4</Description>
    <Bitfield>
      <Name>fs_vco4_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_VCO4_RESERVED4_0</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x14</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>14</RegReset>
  </Register>
<!--FS_VCO3-->
  <Register>
    <Name>FS_VCO3</Name>
    <Address>0x2F24</Address>
    <Description>FS Voltage Controlled Oscillator Configuration Reg. 3</Description>
    <Bitfield>
      <Name>FS_VCO3_NOT_USED</Name>
      <Start>7</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_VCO3_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_VCO2-->
  <Register>
    <Name>FS_VCO2</Name>
    <Address>0x2F25</Address>
    <Description>FS Voltage Controlled Oscillator Configuration Reg. 2</Description>
    <Bitfield>
      <Name>fs_vco2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_VCO2_RESERVED6_0</Name>
      <Start>6</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_VCO1-->
  <Register>
    <Name>FS_VCO1</Name>
    <Address>0x2F26</Address>
    <Description>FS Voltage Controlled Oscillator Configuration Reg. 1</Description>
    <Bitfield>
      <Name>FSD_VCDAC</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>000000</Number>
        <Brief>VCDAC out = min 160 mV</Brief>
      </Value>
      <Value>
        <Number>111111</Number>
        <Brief>VCDAC out = max avdd - 160 mV</Brief>
      </Value>
      <Description><![CDATA[VCO VCDAC configuration. Used in open-loop CAL mode.  Note that avdd is the internal VCO regulated voltage
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_VCO1_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FS_VCO0-->
  <Register>
    <Name>FS_VCO0</Name>
    <Address>0x2F27</Address>
    <Description>FS Voltage Controlled Oscillator Configuration Reg. 0</Description>
    <Bitfield>
      <Name>FS_VCO0_RESERVED7</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_VCO0_RESERVED6_2</Name>
      <Start>6</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FS_VCO0_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>81</RegReset>
  </Register>
<!--GBIAS6-->
  <Register>
    <Name>GBIAS6</Name>
    <Address>0x2F28</Address>
    <Description>Global Bias Configuration Reg. 6</Description>
    <Bitfield>
      <Name>GBIAS6_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS6_RESERVED5_0</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--GBIAS5-->
  <Register>
    <Name>GBIAS5</Name>
    <Address>0x2F29</Address>
    <Description>Global Bias Configuration Reg. 5</Description>
    <Bitfield>
      <Name>GBIAS5_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS5_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>2</RegReset>
  </Register>
<!--GBIAS4-->
  <Register>
    <Name>GBIAS4</Name>
    <Address>0x2F2A</Address>
    <Description>Global Bias Configuration Reg. 4</Description>
    <Bitfield>
      <Name>GBIAS4_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS4_RESERVED5_0</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--GBIAS3-->
  <Register>
    <Name>GBIAS3</Name>
    <Address>0x2F2B</Address>
    <Description>Global Bias Configuration Reg. 3</Description>
    <Bitfield>
      <Name>GBIAS3_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS3_RESERVED5_0</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--GBIAS2-->
  <Register>
    <Name>GBIAS2</Name>
    <Address>0x2F2C</Address>
    <Description>Global Bias Configuration Reg. 2</Description>
    <Bitfield>
      <Name>GBIAS2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS2_RESERVED6_3</Name>
      <Start>6</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x02</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS2_RESERVED2_0</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>10</RegReset>
  </Register>
<!--GBIAS1-->
  <Register>
    <Name>GBIAS1</Name>
    <Address>0x2F2D</Address>
    <Description>Global Bias Configuration Reg. 1</Description>
    <Bitfield>
      <Name>GBIAS1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS1_RESERVED4_0</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--GBIAS0-->
  <Register>
    <Name>GBIAS0</Name>
    <Address>0x2F2E</Address>
    <Description>Global Bias Configuration Reg. 0</Description>
    <Bitfield>
      <Name>GBIAS0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS0_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GBIAS0_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--IFAMP-->
  <Register>
    <Name>IFAMP</Name>
    <Address>0x2F2F</Address>
    <Description>Intermediate Frequency Amplifier Configuration</Description>
    <Bitfield>
      <Name>IFAMP_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>IFAMP_BW</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00</Number>
        <Brief> 300 kHz</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief> 600 kHz</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>1000 kHz</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>1500 kHz</Brief>
      </Value>
      <Description><![CDATA[Single side bandwidth control bits covering frequency range from 300 kHz to 1500 kHz. Single Side BW > f_IF+(RX Filter BW/2)
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IFAMP_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>1</RegReset>
  </Register>
<!--LNA-->
  <Register>
    <Name>LNA</Name>
    <Address>0x2F30</Address>
    <Description>Low Noise Amplifier Configuration</Description>
    <Bitfield>
      <Name>LNA_NOT_USED</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>LNA_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>1</RegReset>
  </Register>
<!--RXMIX-->
  <Register>
    <Name>RXMIX</Name>
    <Address>0x2F31</Address>
    <Description>RX Mixer Configuration</Description>
    <Bitfield>
      <Name>RXMIX_NOT_USED</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>RXMIX_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>1</RegReset>
  </Register>
<!--XOSC5-->
  <Register>
    <Name>XOSC5</Name>
    <Address>0x2F32</Address>
    <Description>Crystal Oscillator Configuration Reg. 5</Description>
    <Bitfield>
      <Name>XOSC5_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC5_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x0C</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>c</RegReset>
  </Register>
<!--XOSC4-->
  <Register>
    <Name>XOSC4</Name>
    <Address>0x2F33</Address>
    <Description>Crystal Oscillator Configuration Reg. 4</Description>
    <Bitfield>
      <Name>XOSC4_RESERVED7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0xA0</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>a0</RegReset>
  </Register>
<!--XOSC3-->
  <Register>
    <Name>XOSC3</Name>
    <Address>0x2F34</Address>
    <Description>Crystal Oscillator Configuration Reg. 3</Description>
    <Bitfield>
      <Name>XOSC3_RESERVED7_2</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC3_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x03</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>3</RegReset>
  </Register>
<!--XOSC2-->
  <Register>
    <Name>XOSC2</Name>
    <Address>0x2F35</Address>
    <Description>Crystal Oscillator Configuration Reg. 2</Description>
    <Bitfield>
      <Name>XOSC2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC2_RESERVED3_2</Name>
      <Start>3</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC2_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC_CORE_PD_OVERRIDE</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>The XOSC will be turned off if the SXOFF, SPWD, or SWOR command strobes are issued</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>The XOSC is forced on even if an SXOFF, SPWD, or SWOR command strobe has been issued. This can be used to enable fast start-up from SLEEP/XOFF on the expense of a higher current consumption</Brief>
      </Value>
      <Description></Description>
    </Bitfield>
    <RegReset>4</RegReset>
  </Register>
<!--XOSC1-->
  <Register>
    <Name>XOSC1</Name>
    <Address>0x2F36</Address>
    <Description>Crystal Oscillator Configuration Reg. 1</Description>
    <Bitfield>
      <Name>XOSC1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>3</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC1_RESERVED2</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC_BUF_SEL</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Low power, single ended buffer (differential buffer is shut down)</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Low phase noise, differential buffer (low power buffer still used for digital clock)</Brief>
      </Value>
      <Description><![CDATA[XOSC buffer select. Selects internal XOSC buffer for RF PLL
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC_STABLE</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[XOSC is stable (has finished settling)
]]></Description>
    </Bitfield>
    <RegReset>1</RegReset>
  </Register>
<!--XOSC0-->
  <Register>
    <Name>XOSC0</Name>
    <Address>0x2F37</Address>
    <Description>Crystal Oscillator Configuration Reg. 0</Description>
    <Bitfield>
      <Name>XOSC0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC0_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC0_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--ANALOG_SPARE-->
  <Register>
    <Name>ANALOG_SPARE</Name>
    <Address>0x2F38</Address>
    <Description>Analog Spare</Description>
    <Bitfield>
      <Name>ANALOG_SPARE_RESERVED7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PA_CFG3-->
  <Register>
    <Name>PA_CFG3</Name>
    <Address>0x2F39</Address>
    <Description>Power Amplifier Configuration Reg. 3</Description>
    <Bitfield>
      <Name>PA_CFG3_NOT_USED</Name>
      <Start>7</Start>
      <Stop>3</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>PA_CFG3_RESERVED2_0</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!-- XmlAppender: Start of content from 'xml/status_reg_block_external.xml' -->
<!--WOR_TIME1-->
  <Register>
    <Name>WOR_TIME1</Name>
    <Address>0x2F64</Address>
    <Description>eWOR Timer Counter Value MSB</Description>
    <Bitfield>
      <Name>WOR_STATUS_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[eWOR timer counter value [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--WOR_TIME0-->
  <Register>
    <Name>WOR_TIME0</Name>
    <Address>0x2F65</Address>
    <Description>eWOR Timer Counter Value LSB</Description>
    <Bitfield>
      <Name>WOR_STATUS_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[eWOR timer counter value [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--WOR_CAPTURE1-->
  <Register>
    <Name>WOR_CAPTURE1</Name>
    <Address>0x2F66</Address>
    <Description>eWOR Timer Capture Value MSB</Description>
    <Bitfield>
      <Name>WOR_CAPTURE_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[eWOR timer capture value [15:8]. Capture timer value on sync detect to simplify timer re-synchronization
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--WOR_CAPTURE0-->
  <Register>
    <Name>WOR_CAPTURE0</Name>
    <Address>0x2F67</Address>
    <Description>eWOR Timer Capture Value LSB</Description>
    <Bitfield>
      <Name>WOR_CAPTURE_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[eWOR timer capture Value [7:0]. Capture timer value on sync detect to simplify timer re-synchronization
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--BIST-->
  <Register>
    <Name>BIST</Name>
    <Address>0x2F68</Address>
    <Description>MARC Built-In Self-Test</Description>
    <Bitfield>
      <Name>BIST_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>BIST_RESERVED3</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>BIST_RESERVED2</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>BIST_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>BIST_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--DCFILTOFFSET_I1-->
  <Register>
    <Name>DCFILTOFFSET_I1</Name>
    <Address>0x2F69</Address>
    <Description>DC Filter Offset I MSB</Description>
    <Bitfield>
      <Name>DCFILT_OFFSET_I_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[DC compensation, real value [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--DCFILTOFFSET_I0-->
  <Register>
    <Name>DCFILTOFFSET_I0</Name>
    <Address>0x2F6A</Address>
    <Description>DC Filter Offset I LSB</Description>
    <Bitfield>
      <Name>DCFILT_OFFSET_I_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[DC compensation, real value [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--DCFILTOFFSET_Q1-->
  <Register>
    <Name>DCFILTOFFSET_Q1</Name>
    <Address>0x2F6B</Address>
    <Description>DC Filter Offset Q MSB</Description>
    <Bitfield>
      <Name>DCFILT_OFFSET_Q_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[DC compensation, imaginary value [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--DCFILTOFFSET_Q0-->
  <Register>
    <Name>DCFILTOFFSET_Q0</Name>
    <Address>0x2F6C</Address>
    <Description>DC Filter Offset Q LSB</Description>
    <Bitfield>
      <Name>DCFILT_OFFSET_Q_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[DC compensation, imaginary value [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--IQIE_I1-->
  <Register>
    <Name>IQIE_I1</Name>
    <Address>0x2F6D</Address>
    <Description>IQ Imbalance Value I MSB</Description>
    <Bitfield>
      <Name>IQIE_I_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[IQ imbalance value, real part [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--IQIE_I0-->
  <Register>
    <Name>IQIE_I0</Name>
    <Address>0x2F6E</Address>
    <Description>IQ Imbalance Value I LSB</Description>
    <Bitfield>
      <Name>IQIE_I_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[IQ imbalance value, real part [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--IQIE_Q1-->
  <Register>
    <Name>IQIE_Q1</Name>
    <Address>0x2F6F</Address>
    <Description>IQ Imbalance Value Q MSB</Description>
    <Bitfield>
      <Name>IQIE_Q_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[IQ imbalance value, imaginary part [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--IQIE_Q0-->
  <Register>
    <Name>IQIE_Q0</Name>
    <Address>0x2F70</Address>
    <Description>IQ Imbalance Value Q LSB</Description>
    <Bitfield>
      <Name>IQIE_Q_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[IQ imbalance value, imaginary part [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--RSSI1-->
  <Register>
    <Name>RSSI1</Name>
    <Address>0x2F71</Address>
    <Description>Received Signal Strength Indicator Reg. 1</Description>
    <Bitfield>
      <Name>RSSI_11_4</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x80</Reset>
      <Description><![CDATA[Received signal strength indicator. 8 MSB of RSSI[11:0]. RSSI[11:0] is a two's complement number with 0.0625 dB resolution hence ranging from -128 to 127 dBm. A value of -128 dBm indicates that the RSSI is invalid. To get a correct RSSI value a calibrated RSSI offset value should be subtracted from the value given by RSSI[11:0]. This RSSI offset value can either be subtracted from RSSI[11:0] manually or the offset can be written to AGC_GAIN_ADJUST.GAIN_ADJUSTMENT meaning that RSSI[11:0] will give a correct value directly
]]></Description>
    </Bitfield>
    <RegReset>80</RegReset>
  </Register>
<!--RSSI0-->
  <Register>
    <Name>RSSI0</Name>
    <Address>0x2F72</Address>
    <Description>Received Signal Strength Indicator Reg.0</Description>
    <Bitfield>
      <Name>RSSI0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>RSSI_3_0</Name>
      <Start>6</Start>
      <Stop>3</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Received signal strength indicator. 4 LSB of RSSI[11:0]. See RSSI1.RSSI_11_4
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>CARRIER_SENSE</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>No carrier detected</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>carrier detected</Brief>
      </Value>
      <Description><![CDATA[Carrier sense
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>CARRIER_SENSE_VALID</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Carrier sense not valid</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Carrier sense valid</Brief>
      </Value>
      <Description><![CDATA[Carrier sense valid
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RSSI_VALID</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>RSSI not valid</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>RSSI valid</Brief>
      </Value>
      <Description><![CDATA[RSSI valid
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--MARCSTATE-->
  <Register>
    <Name>MARCSTATE</Name>
    <Address>0x2F73</Address>
    <Description>MARC State</Description>
    <Bitfield>
      <Name>MARCSTATE_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>MARC_2PIN_STATE</Name>
      <Start>6</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x02</Reset>
      <Value>
        <Number>00</Number>
        <Brief>SETTLING</Brief>
      </Value>
      <Value>
        <Number>01</Number>
        <Brief>TX</Brief>
      </Value>
      <Value>
        <Number>10</Number>
        <Brief>IDLE</Brief>
      </Value>
      <Value>
        <Number>11</Number>
        <Brief>RX</Brief>
      </Value>
      <Description><![CDATA[MARC 2 pin state value
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>MARC_STATE</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[<TABLE BORDER=1>
<TR>
<TD></TD>
<TD>MARC state</TD>
<TD>MARC 2 pin state value</TD>
<TR>
<TD>00000</TD>
<TD>SLEEP</TD>
<TD>Depends on the GPIO pins used</TD>
</TR>
<TR>
<TD>00001</TD>
<TD>IDLE</TD>
<TD>IDLE</TD>
</TR>
<TR>
<TD>00010</TD>
<TD>XOFF</TD>
<TD>SETTLING</TD>
<TR>
<TD>00011</TD>
<TD>BIAS_SETTLE_MC</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>00100</TD>
<TD>REG_SETTLE_MC</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>00101</TD>
<TD>MANCAL</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>00110</TD>
<TD>BIAS_SETTLE</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>00111</TD>
<TD>REG_SETTLE</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>01000</TD>
<TD>STARTCAL</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>01001</TD>
<TD>BWBOOST</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>01010</TD>
<TD>FS_LOCK</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>01011</TD>
<TD>IFADCON</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>01100</TD>
<TD>ENDCAL</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>01101</TD>
<TD>RX</TD>
<TD>RX</TD>
</TR>
<TR>
<TD>01110</TD>
<TD>RX_END</TD>
<TD>RX</TD>
</TR>
<TR>
<TD>01111</TD>
<TD>Reserved</TD>
<TD>RX</TD>
</TR>
<TR>
<TD>10000</TD>
<TD>TXRX_SWITCH</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>10001</TD>
<TD>RX_FIFO_ERR</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>10010</TD>
<TD>FSTXON</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>10011</TD>
<TD>TX</TD>
<TD>TX</TD>
</TR>
<TR>
<TD>10100</TD>
<TD>TX_END</TD>
<TD>TX</TD>
</TR>
<TR>
<TD>10101</TD>
<TD>RXTX_SWITCH</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>10110</TD>
<TD>TX_FIFO_ERR</TD>
<TD>SETTLING</TD>
</TR>
<TR>
<TD>10111</TD>
<TD>IFADCON_TXRX</TD>
<TD>SETTLING</TD>
</TR>
<TR>
</TR>
</TABLE>
]]></Description>
    </Bitfield>
    <RegReset>41</RegReset>
  </Register>
<!--LQI_VAL-->
  <Register>
    <Name>LQI_VAL</Name>
    <Address>0x2F74</Address>
    <Description>Link Quality Indicator Value</Description>
    <Bitfield>
      <Name>PKT_CRC_OK</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>CRC check not ok (bit error)</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>CRC check ok (no bit error)</Brief>
      </Value>
      <Description><![CDATA[CRC OK. Asserted in RX when PKT_CFG1.CRC_CFG = 1 or 10b and a good packet is received. This signal is always on if the radio is in TX or if the radio is in RX and PKT_CFG1.CRC_CFG = 0. The signal is de-asserted when RX mode is entered and PKT_CFG1.CRC_CFG != 0
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>LQI</Name>
      <Start>6</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Link quality indicator. 0 when not valid. A low value indicates a better link than what a high value does
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PQT_SYNC_ERR-->
  <Register>
    <Name>PQT_SYNC_ERR</Name>
    <Address>0x2F75</Address>
    <Description>Preamble and Sync Word Error</Description>
    <Bitfield>
      <Name>PQT_ERROR</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x0F</Reset>
      <Description><![CDATA[Preamble qualifier value. The actual preamble qualifier value can be greater than 15 but since PQT_ERROR is only 4 bits wide PQT_ERROR = MIN[actual PQT qualifier value] modulo 16. This means that if PQT _ERROR = 0001b the actual preamble qualifier value is either 1 or 17. When a sync word is detected (SYNC_EVENT is asserted) the PQT_ERROR register field is not updated again before RX mode is re-entered. As long as the radio is in RX searching for a sync word the register field will be updated continuously
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SYNC_ERROR</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x0F</Reset>
      <Description><![CDATA[Sync word qualifier value. The actual sync word qualifier value can be greater than 15 but since SYNC_ERROR is only 4 bits wide SYNC_ERROR = FLOOR[actual sync word qualifier value/2] modulo 16. This means that if SYNC_ERROR = 0001b the actual sync word qualifier value is either 2, 3, 34, or 35. When a sync word is received (SYNC_EVENT is asserted) the SYNC_ERROR register field is not updated again before RX mode is re-entered. As long as the radio is in RX searching for a sync word the register field will be updated continuously
]]></Description>
    </Bitfield>
    <RegReset>ff</RegReset>
  </Register>
<!--DEM_STATUS-->
  <Register>
    <Name>DEM_STATUS</Name>
    <Address>0x2F76</Address>
    <Description>Demodulator Status</Description>
    <Bitfield>
      <Name>RSSI_STEP_FOUND</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>No RSSI step found during packet reception</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>RSSI step found during packet reception</Brief>
      </Value>
      <Description><![CDATA[RSSI step found during packet reception (after the assertion of SYNC_EVENT). The RSSI step is 10 or 16 dB and is configured through AGC_CFG1.RSSI_STEP_THR
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>COLLISION_FOUND</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>No collision found</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Collision found</Brief>
      </Value>
      <Description><![CDATA[Collision found. Asserted if a new preamble is found and the RSSI has increased 10 or 16 dB during packet reception (depending on AGC_CFG1.RSSI_STEP_THR). MDMCFG1.COLLISION_DETECT_EN must be 1
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SYNC_LOW0_HIGH1</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Sync word found = [SYNC15_8:SYNC7_0]</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Sync word found = [SYNC31_24:SYNC23_16)]</Brief>
      </Value>
      <Description><![CDATA[DualSync Detect. Only valid when SYNC_CFG0.SYNC_MODE = 111b. When SYNC_EVENT is asserted this bit can be checked to see which sync word is found
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>DEM_STATUS_RESERVED4_1</Name>
      <Start>4</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IMAGE_FOUND</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>No image found</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Image found</Brief>
      </Value>
      <Description><![CDATA[Image found detector
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FREQOFF_EST1-->
  <Register>
    <Name>FREQOFF_EST1</Name>
    <Address>0x2F77</Address>
    <Description>Frequency Offset Estimate MSB</Description>
    <Bitfield>
      <Name>FREQOFF_EST_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Frequency offset estimate [15:8] MSB<BR/>
Frequency Offset Estimate = FREOFF_EST*f_xosc/LO Divider/2^18.0 [Hz]. The value is in two's complement format. The LO divider value can be found in FS_CFG.FSD_BANDSELECT register field
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FREQOFF_EST0-->
  <Register>
    <Name>FREQOFF_EST0</Name>
    <Address>0x2F78</Address>
    <Description>Frequency Offset Estimate LSB</Description>
    <Bitfield>
      <Name>FREQOFF_EST_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[See FREQOFF_EST1
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AGC_GAIN3-->
  <Register>
    <Name>AGC_GAIN3</Name>
    <Address>0x2F79</Address>
    <Description>Automatic Gain Control Reg. 3</Description>
    <Bitfield>
      <Name>AGC_GAIN3_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_FRONT_END_GAIN</Name>
      <Start>6</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AGC front end gain. Actual applied gain with 1 dB resolution
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AGC_GAIN2-->
  <Register>
    <Name>AGC_GAIN2</Name>
    <Address>0x2F7A</Address>
    <Description>Automatic Gain Control Reg. 2</Description>
    <Bitfield>
      <Name>AGC_DRIVES_FE_GAIN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>1</Number>
        <Brief>AGC controls front end gain</Brief>
      </Value>
      <Value>
        <Number>0</Number>
        <Brief>Front end gain controlled by registers AGC_GAIN2, AGC_GAIN1, and AGC_GAIN0</Brief>
      </Value>
      <Description><![CDATA[Override AGC gain control
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_GAIN2_RESERVED6_3</Name>
      <Start>6</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x0A</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_GAIN2_RESERVED2_0</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>d1</RegReset>
  </Register>
<!--AGC_GAIN1-->
  <Register>
    <Name>AGC_GAIN1</Name>
    <Address>0x2F7B</Address>
    <Description>Automatic Gain Control Reg. 1</Description>
    <Bitfield>
      <Name>AGC_GAIN1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_GAIN1_RESERVED4_3</Name>
      <Start>4</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_GAIN1_RESERVED2_0</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AGC_GAIN0-->
  <Register>
    <Name>AGC_GAIN0</Name>
    <Address>0x2F7C</Address>
    <Description>Automatic Gain Control Reg. 0</Description>
    <Bitfield>
      <Name>AGC_GAIN0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_GAIN0_RESERVED6_5</Name>
      <Start>6</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AGC_GAIN0_RESERVED4_0</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x1F</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>3f</RegReset>
  </Register>
<!--CFM_RX_DATA_OUT-->
  <Register>
    <Name>CFM_RX_DATA_OUT</Name>
    <Address>0x2F7D</Address>
    <Description>Custom Frequency Modulation RX Data</Description>
    <Bitfield>
      <Name>CFM_RX_DATA</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[8-bit signed soft-decision symbol data, either from normal receiver or transparent receiver. Can be read using burst mode to do custom demodulation<BR/>
f_offset = f_dev*CFM_RX_DATA/64 [Hz] (two's complement format)<BR/>
f_dev is the programmed frequency deviation
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--CFM_TX_DATA_IN-->
  <Register>
    <Name>CFM_TX_DATA_IN</Name>
    <Address>0x2F7E</Address>
    <Description>Custom Frequency Modulation TX Data</Description>
    <Bitfield>
      <Name>CFM_TX_DATA</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[8-bit signed soft TX data input register for custom SW controlled modulation. Can be accessed using burst mode to get arbitrary modulation<BR/>
f_offset = f_dev*CFM_TX_DATA/64 [Hz] (two's complement format). f_dev is the programmed frequency deviation
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--ASK_SOFT_RX_DATA-->
  <Register>
    <Name>ASK_SOFT_RX_DATA</Name>
    <Address>0x2F7F</Address>
    <Description>ASK Soft Decision Output</Description>
    <Bitfield>
      <Name>ASK_SOFT_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>ASK_SOFT</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x30</Reset>
      <Description><![CDATA[The OOK/ASK receiver use a max peak magnitude tracker and low peak magnitude tracker to estimate ASK_THRESHOLD. The ASK_THRESHOLD is used to do hard decision of OOK/ASK symbols<BR/>
ASK_SOFT = +16 when magnitude is = ASK_THRESHOLD<BR/>
ASK_SOFT = -16 when magnitude is = ASK_THRESHOLD
]]></Description>
    </Bitfield>
    <RegReset>30</RegReset>
  </Register>
<!--RNDGEN-->
  <Register>
    <Name>RNDGEN</Name>
    <Address>0x2F80</Address>
    <Description>Random Number Generator Value</Description>
    <Bitfield>
      <Name>RNDGEN_EN</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Random number generator disabled</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Random number generator enabled</Brief>
      </Value>
      <Description><![CDATA[Random number generator enable
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RNDGEN_VALUE</Name>
      <Start>6</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x7F</Reset>
      <Description><![CDATA[Random number value. Number generated by 7 bit LFSR register (X7+X6+1). Number will be further randomized when in RX by XORing the feedback with receiver noise
]]></Description>
    </Bitfield>
    <RegReset>7f</RegReset>
  </Register>
<!--MAGN2-->
  <Register>
    <Name>MAGN2</Name>
    <Address>0x2F81</Address>
    <Description>Signal Magnitude after CORDIC [16]</Description>
    <Bitfield>
      <Name>MAGN_NOT_USED</Name>
      <Start>7</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>MAGN_16</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Instantaneous signal magnitude after CORDIC, 17-bit [16]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--MAGN1-->
  <Register>
    <Name>MAGN1</Name>
    <Address>0x2F82</Address>
    <Description>Signal Magnitude after CORDIC [15:8]</Description>
    <Bitfield>
      <Name>MAGN_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Instantaneous signal magnitude after CORDIC, 17-bit [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--MAGN0-->
  <Register>
    <Name>MAGN0</Name>
    <Address>0x2F83</Address>
    <Description>Signal Magnitude after CORDIC [7:0]</Description>
    <Bitfield>
      <Name>MAGN_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Instantaneous signal magnitude after CORDIC, 17-bit [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--ANG1-->
  <Register>
    <Name>ANG1</Name>
    <Address>0x2F84</Address>
    <Description>Signal Angular after CORDIC [9:8]</Description>
    <Bitfield>
      <Name>ANG1_NOT_USED</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>ANGULAR_9_8</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Instantaneous signal angular after CORDIC, 10-bit [9:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--ANG0-->
  <Register>
    <Name>ANG0</Name>
    <Address>0x2F85</Address>
    <Description>Signal Angular after CORDIC [7:0]</Description>
    <Bitfield>
      <Name>ANGULAR_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Instantaneous signal angular after CORDIC, 10-bit [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--CHFILT_I2-->
  <Register>
    <Name>CHFILT_I2</Name>
    <Address>0x2F86</Address>
    <Description>Channel Filter Data Real Part [16]</Description>
    <Bitfield>
      <Name>CHFILT_I2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>CHFILT_STARTUP_VALID</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Channel filter data not valid</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>Channel filter data valid (asserted after 16 channel filter samples)</Brief>
      </Value>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>CHFILT_I_16</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Channel filter data, real part, 17-bit [16]
]]></Description>
    </Bitfield>
    <RegReset>2</RegReset>
  </Register>
<!--CHFILT_I1-->
  <Register>
    <Name>CHFILT_I1</Name>
    <Address>0x2F87</Address>
    <Description>Channel Filter Data Real Part [15:8]</Description>
    <Bitfield>
      <Name>CHFILT_I_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Channel filter data, real part, 17-bit [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--CHFILT_I0-->
  <Register>
    <Name>CHFILT_I0</Name>
    <Address>0x2F88</Address>
    <Description>Channel Filter Data Real Part [7:0]</Description>
    <Bitfield>
      <Name>CHFILT_I_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Channel filter data, real part, 17-bit [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--CHFILT_Q2-->
  <Register>
    <Name>CHFILT_Q2</Name>
    <Address>0x2F89</Address>
    <Description>Channel Filter Data Imaginary Part [16]</Description>
    <Bitfield>
      <Name>CHFILT_Q2_NOT_USED</Name>
      <Start>7</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>CHFILT_Q_16</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Channel filter data, imaginary part, 17-bit [16]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--CHFILT_Q1-->
  <Register>
    <Name>CHFILT_Q1</Name>
    <Address>0x2F8A</Address>
    <Description>Channel Filter Data Imaginary Part [15:8]</Description>
    <Bitfield>
      <Name>CHFILT_Q_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Channel filter data, imaginary part, 17-bit [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--CHFILT_Q0-->
  <Register>
    <Name>CHFILT_Q0</Name>
    <Address>0x2F8B</Address>
    <Description>Channel Filter Data Imaginary Part [7:0]</Description>
    <Bitfield>
      <Name>CHFILT_Q_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Channel filter data, imaginary part, 17-bit [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--GPIO_STATUS-->
  <Register>
    <Name>GPIO_STATUS</Name>
    <Address>0x2F8C</Address>
    <Description>General Purpose Input/Output Status</Description>
    <Bitfield>
      <Name>GPIO_STATUS_RESERVED7_4</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>GPIO_STATE</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[State of GPIO pins. SERIAL_STATUS.IOC_SYNC_PINS_EN must be 1
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FSCAL_CTRL-->
  <Register>
    <Name>FSCAL_CTRL</Name>
    <Address>0x2F8D</Address>
    <Description>Frequency Synthesizer Calibration Control</Description>
    <Bitfield>
      <Name>FSCAL_CTRL_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSCAL_CTRL_RESERVED6</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSCAL_CTRL_RESERVED5</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSCAL_CTRL_RESERVED4</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSCAL_CTRL_RESERVED3</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSCAL_CTRL_RESERVED2_1</Name>
      <Start>2</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>LOCK</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x01</Reset>
      <Value>
        <Number>0</Number>
        <Brief>FS is out of lock</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>FS out of lock not detected</Brief>
      </Value>
      <Description><![CDATA[Out of lock indicator (FS_CFG.FS_LOCK_EN must be 1). The state of this signal is only valid in RX, TX, and FSTXON state
]]></Description>
    </Bitfield>
    <RegReset>1</RegReset>
  </Register>
<!--PHASE_ADJUST-->
  <Register>
    <Name>PHASE_ADJUST</Name>
    <Address>0x2F8E</Address>
    <Description>Frequency Synthesizer Phase Adjust</Description>
    <Bitfield>
      <Name>PHASE_ADJUST_RESERVED7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PARTNUMBER-->
  <Register>
    <Name>PARTNUMBER</Name>
    <Address>0x2F8F</Address>
    <Description>Part Number</Description>
    <Bitfield>
      <Name>PARTNUM</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0x20</Number>
        <Brief>CC1200</Brief>
      </Value>
      <Value>
        <Number>0x21</Number>
        <Brief>CC1201</Brief>
      </Value>
      <Description><![CDATA[Chip ID
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PARTVERSION-->
  <Register>
    <Name>PARTVERSION</Name>
    <Address>0x2F90</Address>
    <Description>Part Revision</Description>
    <Bitfield>
      <Name>PARTVER</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Chip revision
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--SERIAL_STATUS-->
  <Register>
    <Name>SERIAL_STATUS</Name>
    <Address>0x2F91</Address>
    <Description>Serial Status</Description>
    <Bitfield>
      <Name>SERIAL_STATUS_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>SPI_DIRECT_ACCESS_CFG</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>FIFO buffers</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>FEC workspace or 128 bytes free area</Brief>
      </Value>
      <Description><![CDATA[Configures which memory to access when using direct memory access
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>CLK40</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Internal 40 kHz RC oscillator clock
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>IOC_SYNC_PINS_EN</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Enable synchronizer for IO pins. Required for transparent TX and for reading GPIO_STATUS.GPIO_STATE
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>CFM_TX_DATA_CLK</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Modulator soft data clock (16 times higher than the programmed symbol rate)
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SERIAL_RX</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Serial RX data
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SERIAL_RX_CLK</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Serial RX data clock
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--MODEM_STATUS1-->
  <Register>
    <Name>MODEM_STATUS1</Name>
    <Address>0x2F92</Address>
    <Description>Modem Status Reg. 1</Description>
    <Bitfield>
      <Name>SYNC_FOUND</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted simultaneously as SYNC_EVENT. De-asserted when an SRX strobe has been issued
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RXFIFO_FULL</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted when number of bytes is greater than the RX FIFO threshold. De-asserted when the RX FIFO is empty
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RXFIFO_THR</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted when number of bytes is greater than the RX FIFO threshold. De-asserted when the RX FIFO is drained below (or is equal) to the same threshold
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RXFIFO_EMPTY</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[High when no bytes reside in the RX FIFO
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RXFIFO_OVERFLOW</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted when the RX FIFO has overflowed (the radio has received more bytes after the RXFIFO is full). De-asserted when the RX FIFO is flushed
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RXFIFO_UNDERFLOW</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted if the user try to read from an empty RX FIFO. De-asserted when the RX FIFO is flushed
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PQT_REACHED</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted when a preamble is detected (the preamble qualifier value is less than the programmed PQT threshold). The signal will stay asserted as long as a preamble is present but will de-assert on sync found (SYNC_EVENT asserted). If the preamble disappears, the signal will de-assert after a timeout defined by the sync word length + 10 symbols after preamble was lost
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PQT_VALID</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[Asserted after 11, 12, 13, 14,1 5, 17, 24, or 32 bits are received (depending on the PREAMBLE_CFG0.PQT_VALID_TIMEOUT setting) or after a preamble is detected
]]></Description>
    </Bitfield>
    <RegReset>1</RegReset>
  </Register>
<!--MODEM_STATUS0-->
  <Register>
    <Name>MODEM_STATUS0</Name>
    <Address>0x2F93</Address>
    <Description>Modem Status Reg. 0</Description>
    <Bitfield>
      <Name>MODEM_STATUS0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FEEC_RX_OVERFLOW</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Internal FEC overflow has occurred
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>MODEM_STATUS0_RESERVED5</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>SYNC_SENT</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Last bit of sync word has been sent
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TXFIFO_FULL</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted when the TX FIFO is full. De-asserted when the number of bytes is below threshold
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TXFIFO_THR</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted when number of bytes is greater than or equal to the TX FIFO threshold
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TXFIFO_OVERFLOW</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted when the TX FIFO has overflowed (The user have tried to write to a full TX FIFO). De-asserted when the TX FIFO is flushed
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TXFIFO_UNDERFLOW</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Asserted when the TX FIFO has underflowed (TX FIFO is empty before the complete packet is sent). De-asserted when the TX FIFO is flushed
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--MARC_STATUS1-->
  <Register>
    <Name>MARC_STATUS1</Name>
    <Address>0x2F94</Address>
    <Description>MARC Status Reg. 1</Description>
    <Bitfield>
      <Name>MARC_STATUS_OUT</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>00000000</Number>
        <Brief>No failure</Brief>
      </Value>
      <Value>
        <Number>00000001</Number>
        <Brief>RX timeout occurred</Brief>
      </Value>
      <Value>
        <Number>00000010</Number>
        <Brief>RX termination based on CS or PQT</Brief>
      </Value>
      <Value>
        <Number>00000011</Number>
        <Brief>eWOR sync lost (16 slots with no successful reception)</Brief>
      </Value>
      <Value>
        <Number>00000100</Number>
        <Brief>Packet discarded due to maximum length filtering</Brief>
      </Value>
      <Value>
        <Number>00000101</Number>
        <Brief>Packet discarded due to address filtering</Brief>
      </Value>
      <Value>
        <Number>00000110</Number>
        <Brief>Packet discarded due to CRC filtering</Brief>
      </Value>
      <Value>
        <Number>00000111</Number>
        <Brief>TX FIFO overflow error occurred</Brief>
      </Value>
      <Value>
        <Number>00001000</Number>
        <Brief>TX FIFO underflow error occurred</Brief>
      </Value>
      <Value>
        <Number>00001001</Number>
        <Brief>RX FIFO overflow error occurred</Brief>
      </Value>
      <Value>
        <Number>00001010</Number>
        <Brief>RX FIFO underflow error occurred</Brief>
      </Value>
      <Value>
        <Number>00001011</Number>
        <Brief>TX ON CCA failed</Brief>
      </Value>
      <Value>
        <Number>01000000</Number>
        <Brief>TX finished successfully</Brief>
      </Value>
      <Value>
        <Number>10000000</Number>
        <Brief>RX finished successfully (a packet is in the RX FIFO ready to be read)</Brief>
      </Value>
      <Description><![CDATA[This register should be read to find what caused the MCU_WAKEUP signal to be asserted
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--MARC_STATUS0-->
  <Register>
    <Name>MARC_STATUS0</Name>
    <Address>0x2F95</Address>
    <Description>MARC Status Reg. 0</Description>
    <Bitfield>
      <Name>MARC_STATUS0_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>MARC_STATUS0_RESERVED3</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>TXONCCA_FAILED</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>The channel was clear. The radio will enter TX state</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>The channel was busy. The radio will remain in RX state</Brief>
      </Value>
      <Description><![CDATA[This bit can be read after the TXONCCA_DONE signal has been asserted
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>MARC_STATUS0_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>RCC_CAL_VALID</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[RCOSC has been calibrated at least once
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PA_IFAMP_TEST-->
  <Register>
    <Name>PA_IFAMP_TEST</Name>
    <Address>0x2F96</Address>
    <Description>Power Amplifier Intermediate Frequency Amplifier Test</Description>
    <Bitfield>
      <Name>PA_IFAMP_TEST_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>PA_IFAMP_TEST_RESERVED4</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PA_IFAMP_TEST_RESERVED3</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PA_IFAMP_TEST_RESERVED2</Name>
      <Start>2</Start>
      <Stop>2</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PA_IFAMP_TEST_RESERVED1</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PA_IFAMP_TEST_RESERVED0</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FSRF_TEST-->
  <Register>
    <Name>FSRF_TEST</Name>
    <Address>0x2F97</Address>
    <Description>Frequency Synthesizer Test</Description>
    <Bitfield>
      <Name>FSRF_TEST_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSRF_TEST_RESERVED6</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSRF_TEST_RESERVED5_4</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSRF_TEST_RESERVED3</Name>
      <Start>3</Start>
      <Stop>3</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>FSRF_TEST_RESERVED2_0</Name>
      <Start>2</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PRE_TEST-->
  <Register>
    <Name>PRE_TEST</Name>
    <Address>0x2F98</Address>
    <Description>Frequency Synthesizer Prescaler Test</Description>
    <Bitfield>
      <Name>PRE_TEST_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>PRE_TEST_RESERVED4</Name>
      <Start>4</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PRE_TEST_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--PRE_OVR-->
  <Register>
    <Name>PRE_OVR</Name>
    <Address>0x2F99</Address>
    <Description>Frequency Synthesizer Prescaler Override</Description>
    <Bitfield>
      <Name>PRE_OVR_RESERVED7_4</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>PRE_OVR_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--ADC_TEST-->
  <Register>
    <Name>ADC_TEST</Name>
    <Address>0x2F9A</Address>
    <Description>Analog to Digital Converter Test</Description>
    <Bitfield>
      <Name>ADC_TEST_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>ADC_TEST_RESERVED5</Name>
      <Start>5</Start>
      <Stop>5</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>ADC_TEST_RESERVED4_0</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--DVC_TEST-->
  <Register>
    <Name>DVC_TEST</Name>
    <Address>0x2F9B</Address>
    <Description>Digital Divider Chain Test</Description>
    <Bitfield>
      <Name>DVC_TEST_NOT_USED</Name>
      <Start>7</Start>
      <Stop>5</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>DVC_TEST_RESERVED4_0</Name>
      <Start>4</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x0B</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>b</RegReset>
  </Register>
<!--ATEST-->
  <Register>
    <Name>ATEST</Name>
    <Address>0x2F9C</Address>
    <Description>Analog Test</Description>
    <Bitfield>
      <Name>ATEST_NOT_USED</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>ATEST_RESERVED6</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x01</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>ATEST_RESERVED5_0</Name>
      <Start>5</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>40</RegReset>
  </Register>
<!--ATEST_LVDS-->
  <Register>
    <Name>ATEST_LVDS</Name>
    <Address>0x2F9D</Address>
    <Description>Analog Test LVDS</Description>
    <Bitfield>
      <Name>atest_lvds_NOT_USED</Name>
      <Start>7</Start>
      <Stop>6</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>ATEST_LVDS_RESERVED5_4</Name>
      <Start>5</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>ATEST_LVDS_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--ATEST_MODE-->
  <Register>
    <Name>ATEST_MODE</Name>
    <Address>0x2F9E</Address>
    <Description>Analog Test Mode</Description>
    <Bitfield>
      <Name>ATEST_MODE_RESERVED7_4</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>ATEST_MODE_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--XOSC_TEST1-->
  <Register>
    <Name>XOSC_TEST1</Name>
    <Address>0x2F9F</Address>
    <Description>Crystal Oscillator Test Reg. 1</Description>
    <Bitfield>
      <Name>XOSC_TEST1_RESERVED7</Name>
      <Start>7</Start>
      <Stop>7</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC_TEST1_RESERVED6</Name>
      <Start>6</Start>
      <Stop>6</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC_TEST1_RESERVED5_2</Name>
      <Start>5</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x0F</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>XOSC_TEST1_RESERVED1_0</Name>
      <Start>1</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>3c</RegReset>
  </Register>
<!--XOSC_TEST0-->
  <Register>
    <Name>XOSC_TEST0</Name>
    <Address>0x2FA0</Address>
    <Description>Crystal Oscillator Test Reg. 0</Description>
    <Bitfield>
      <Name>XOSC_TEST0_RESERVED7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES-->
  <Register>
    <Name>AES</Name>
    <Address>0x2FA1</Address>
    <Description>AES</Description>
    <Bitfield>
      <Name>AES_NOT_USED</Name>
      <Start>7</Start>
      <Stop>2</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>AES_ABORT</Name>
      <Start>1</Start>
      <Stop>1</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Setting this bit to 1 will abort the AES encryption cycle. The bit will be cleared by HW when the abortion sequence is completed
]]></Description>
    </Bitfield>
    <Bitfield>
      <Name>AES_RUN</Name>
      <Start>0</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Value>
        <Number>0</Number>
        <Brief>Halt the current AES encryption</Brief>
      </Value>
      <Value>
        <Number>1</Number>
        <Brief>AES module is enabled and the AES encryption cycle will start/continue given that AES_ABORT is low</Brief>
      </Value>
      <Description><![CDATA[AES enable. The bit will be cleared by HW when an encryption cycle has finished
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--MDM_TEST-->
  <Register>
    <Name>MDM_TEST</Name>
    <Address>0x2FA2</Address>
    <Description>MODEM Test</Description>
    <Bitfield>
      <Name>mdm_test_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>MDM_TEST_RESERVED3_0</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[For test purposes only, use values from SmartRF Studio.]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!-- XmlAppender: Start of content from 'xml/fifo_and_AES_reg_block_external.xml' -->
<!--RXFIRST-->
  <Register>
    <Name>RXFIRST</Name>
    <Address>0x2FD2</Address>
    <Description>RX FIFO Pointer First Entry</Description>
    <Bitfield>
      <Name>RX_FIRST</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Pointer to the first entry in the RX FIFO
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--TXFIRST-->
  <Register>
    <Name>TXFIRST</Name>
    <Address>0x2FD3</Address>
    <Description>TX FIFO Pointer First Entry</Description>
    <Bitfield>
      <Name>TX_FIRST</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Pointer to the first entry in the TX FIFO
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--RXLAST-->
  <Register>
    <Name>RXLAST</Name>
    <Address>0x2FD4</Address>
    <Description>RX FIFO Pointer Last Entry</Description>
    <Bitfield>
      <Name>RX_LAST</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Pointer to the last entry in the RX FIFO
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--TXLAST-->
  <Register>
    <Name>TXLAST</Name>
    <Address>0x2FD5</Address>
    <Description>TX FIFO Pointer Last Entry</Description>
    <Bitfield>
      <Name>TX_LAST</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Pointer to the last entry in the TX FIFO
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--NUM_TXBYTES-->
  <Register>
    <Name>NUM_TXBYTES</Name>
    <Address>0x2FD6</Address>
    <Description>TX FIFO Status</Description>
    <Bitfield>
      <Name>TXBYTES</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Number of bytes in the TX FIFO
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--NUM_RXBYTES-->
  <Register>
    <Name>NUM_RXBYTES</Name>
    <Address>0x2FD7</Address>
    <Description>RX FIFO Status</Description>
    <Bitfield>
      <Name>RXBYTES</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Number of bytes in the RX FIFO
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--FIFO_NUM_TXBYTES-->
  <Register>
    <Name>FIFO_NUM_TXBYTES</Name>
    <Address>0x2FD8</Address>
    <Description>TX FIFO Status</Description>
    <Bitfield>
      <Name>FIFO_NUM_TXBYTES_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FIFO_TXBYTES</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x0F</Reset>
      <Description><![CDATA[Number of free entries in the TX FIFO. 1111b means that there are 15 or more free entries
]]></Description>
    </Bitfield>
    <RegReset>f</RegReset>
  </Register>
<!--FIFO_NUM_RXBYTES-->
  <Register>
    <Name>FIFO_NUM_RXBYTES</Name>
    <Address>0x2FD9</Address>
    <Description>RX FIFO Status</Description>
    <Bitfield>
      <Name>FIFO_NUM_RXBYTES_NOT_USED</Name>
      <Start>7</Start>
      <Stop>4</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description></Description>
    </Bitfield>
    <Bitfield>
      <Name>FIFO_RXBYTES</Name>
      <Start>3</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Number of available bytes in the RX FIFO. 1111b means that there are 15 or more bytes available to read
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--RXFIFO_PRE_BUF-->
  <Register>
    <Name>RXFIFO_PRE_BUF</Name>
    <Address>0x2FDA</Address>
    <Description>RX FIFO Status</Description>
    <Bitfield>
      <Name>PRE_BUF</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[Contains the first byte received in the RX FIFO when the RX FIFO is empty (i.e. RXFIRST = RXLAST)
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY15-->
  <Register>
    <Name>AES_KEY15</Name>
    <Address>0x2FE0</Address>
    <Description>Advanced Encryption Standard Key [127:120]</Description>
    <Bitfield>
      <Name>AES_KEY_127_120</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [127:120]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY14-->
  <Register>
    <Name>AES_KEY14</Name>
    <Address>0x2FE1</Address>
    <Description>Advanced Encryption Standard Key [119:112]</Description>
    <Bitfield>
      <Name>AES_KEY_119_112</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [119:112]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY13-->
  <Register>
    <Name>AES_KEY13</Name>
    <Address>0x2FE2</Address>
    <Description>Advanced Encryption Standard Key [111:104]</Description>
    <Bitfield>
      <Name>AES_KEY_111_104</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [111:104]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY12-->
  <Register>
    <Name>AES_KEY12</Name>
    <Address>0x2FE3</Address>
    <Description>Advanced Encryption Standard Key [103:96]</Description>
    <Bitfield>
      <Name>AES_KEY_103_96</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [103:96]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY11-->
  <Register>
    <Name>AES_KEY11</Name>
    <Address>0x2FE4</Address>
    <Description>Advanced Encryption Standard Key [95:88]</Description>
    <Bitfield>
      <Name>AES_KEY_95_88</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [95:88]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY10-->
  <Register>
    <Name>AES_KEY10</Name>
    <Address>0x2FE5</Address>
    <Description>Advanced Encryption Standard Key [87:80]</Description>
    <Bitfield>
      <Name>AES_KEY_87_80</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [87:80]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY9-->
  <Register>
    <Name>AES_KEY9</Name>
    <Address>0x2FE6</Address>
    <Description>Advanced Encryption Standard Key [79:72]</Description>
    <Bitfield>
      <Name>AES_KEY_79_72</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [79:72]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY8-->
  <Register>
    <Name>AES_KEY8</Name>
    <Address>0x2FE7</Address>
    <Description>Advanced Encryption Standard Key [71:64]</Description>
    <Bitfield>
      <Name>AES_KEY_71_64</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [71:64]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY7-->
  <Register>
    <Name>AES_KEY7</Name>
    <Address>0x2FE8</Address>
    <Description>Advanced Encryption Standard Key [63:56]</Description>
    <Bitfield>
      <Name>AES_KEY_63_56</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [63:56]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY6-->
  <Register>
    <Name>AES_KEY6</Name>
    <Address>0x2FE9</Address>
    <Description>Advanced Encryption Standard Key [55:48]</Description>
    <Bitfield>
      <Name>AES_KEY_55_48</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [55:48]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY5-->
  <Register>
    <Name>AES_KEY5</Name>
    <Address>0x2FEA</Address>
    <Description>Advanced Encryption Standard Key [47:40]</Description>
    <Bitfield>
      <Name>AES_KEY_47_40</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [47:40]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY4-->
  <Register>
    <Name>AES_KEY4</Name>
    <Address>0x2FEB</Address>
    <Description>Advanced Encryption Standard Key [39:32]</Description>
    <Bitfield>
      <Name>AES_KEY_39_32</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [39:32]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY3-->
  <Register>
    <Name>AES_KEY3</Name>
    <Address>0x2FEC</Address>
    <Description>Advanced Encryption Standard Key [31:24]</Description>
    <Bitfield>
      <Name>AES_KEY_31_24</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [31:24]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY2-->
  <Register>
    <Name>AES_KEY2</Name>
    <Address>0x2FED</Address>
    <Description>Advanced Encryption Standard Key [23:16]</Description>
    <Bitfield>
      <Name>AES_KEY_23_16</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [23:16]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY1-->
  <Register>
    <Name>AES_KEY1</Name>
    <Address>0x2FEE</Address>
    <Description>Advanced Encryption Standard Key [15:8]</Description>
    <Bitfield>
      <Name>AES_KEY_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [15:8]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_KEY0-->
  <Register>
    <Name>AES_KEY0</Name>
    <Address>0x2FEF</Address>
    <Description>Advanced Encryption Standard Key [7:0]</Description>
    <Bitfield>
      <Name>AES_KEY_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[16 bytes AES key, [7:0]
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER15-->
  <Register>
    <Name>AES_BUFFER15</Name>
    <Address>0x2FF0</Address>
    <Description>Advanced Encryption Standard Buffer [127:120]</Description>
    <Bitfield>
      <Name>AES_BUFFER_127_120</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [127:120]. The content serves as input to the AES encryption module, and the content will be overwritten with the encrypted data when the AES encryption is completed
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER14-->
  <Register>
    <Name>AES_BUFFER14</Name>
    <Address>0x2FF1</Address>
    <Description>Advanced Encryption Standard Buffer [119:112]</Description>
    <Bitfield>
      <Name>AES_BUFFER_119_112</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [119:112]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER13-->
  <Register>
    <Name>AES_BUFFER13</Name>
    <Address>0x2FF2</Address>
    <Description>Advanced Encryption Standard Buffer [111:104]</Description>
    <Bitfield>
      <Name>AES_BUFFER_111_104</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [111:104]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER12-->
  <Register>
    <Name>AES_BUFFER12</Name>
    <Address>0x2FF3</Address>
    <Description>Advanced Encryption Standard Buffer [103:93]</Description>
    <Bitfield>
      <Name>AES_BUFFER_103_93</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [103:93]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER11-->
  <Register>
    <Name>AES_BUFFER11</Name>
    <Address>0x2FF4</Address>
    <Description>Advanced Encryption Standard Buffer [95:88]</Description>
    <Bitfield>
      <Name>AES_BUFFER_95_88</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [95:88]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER10-->
  <Register>
    <Name>AES_BUFFER10</Name>
    <Address>0x2FF5</Address>
    <Description>Advanced Encryption Standard Buffer [87:80]</Description>
    <Bitfield>
      <Name>AES_BUFFER_87_80</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [87:80]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER9-->
  <Register>
    <Name>AES_BUFFER9</Name>
    <Address>0x2FF6</Address>
    <Description>Advanced Encryption Standard Buffer [79:72]</Description>
    <Bitfield>
      <Name>AES_BUFFER_79_72</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [79:72]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER8-->
  <Register>
    <Name>AES_BUFFER8</Name>
    <Address>0x2FF7</Address>
    <Description>Advanced Encryption Standard Buffer [71:64]</Description>
    <Bitfield>
      <Name>AES_BUFFER_71_64</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [71:64]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER7-->
  <Register>
    <Name>AES_BUFFER7</Name>
    <Address>0x2FF8</Address>
    <Description>Advanced Encryption Standard Buffer [63:56]</Description>
    <Bitfield>
      <Name>AES_BUFFER_63_56</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [63:56]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER6-->
  <Register>
    <Name>AES_BUFFER6</Name>
    <Address>0x2FF9</Address>
    <Description>Advanced Encryption Standard Buffer [55:48]</Description>
    <Bitfield>
      <Name>AES_BUFFER_55_48</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [55:48]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER5-->
  <Register>
    <Name>AES_BUFFER5</Name>
    <Address>0x2FFA</Address>
    <Description>Advanced Encryption Standard Buffer [47:40]</Description>
    <Bitfield>
      <Name>AES_BUFFER_47_40</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [47:40]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER4-->
  <Register>
    <Name>AES_BUFFER4</Name>
    <Address>0x2FFB</Address>
    <Description>Advanced Encryption Standard Buffer [39:32]</Description>
    <Bitfield>
      <Name>AES_BUFFER_39_32</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [39:32]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER3-->
  <Register>
    <Name>AES_BUFFER3</Name>
    <Address>0x2FFC</Address>
    <Description>Advanced Encryption Standard Buffer [31:24]</Description>
    <Bitfield>
      <Name>AES_BUFFER_31_24</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [131:24]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER2-->
  <Register>
    <Name>AES_BUFFER2</Name>
    <Address>0x2FFD</Address>
    <Description>Advanced Encryption Standard Buffer [23:16]</Description>
    <Bitfield>
      <Name>AES_BUFFER_23_16</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [23:16]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER1-->
  <Register>
    <Name>AES_BUFFER1</Name>
    <Address>0x2FFE</Address>
    <Description>Advanced Encryption Standard Buffer [15:8]</Description>
    <Bitfield>
      <Name>AES_BUFFER_15_8</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [15:8]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
<!--AES_BUFFER0-->
  <Register>
    <Name>AES_BUFFER0</Name>
    <Address>0x2FFF</Address>
    <Description>Advanced Encryption Standard Buffer [7:0]</Description>
    <Bitfield>
      <Name>AES_BUFFER_7_0</Name>
      <Start>7</Start>
      <Stop>0</Stop>
      <Access>R/W</Access>
      <Reset>0x00</Reset>
      <Description><![CDATA[AES data buffer [7:0]. See AES_BUFFER15 for details
]]></Description>
    </Bitfield>
    <RegReset>0</RegReset>
  </Register>
</registerdefinition>